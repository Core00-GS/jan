"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[7391],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>f});var r=n(7294);function s(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){s(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,s=function(e,t){if(null==e)return{};var n,r,s={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(s[n]=e[n]);return s}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(s[n]=e[n])}return s}var i=r.createContext({}),l=function(e){var t=r.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},d=function(e){var t=l(e.components);return r.createElement(i.Provider,{value:t},e.children)},u="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,s=e.mdxType,a=e.originalType,i=e.parentName,d=c(e,["components","mdxType","originalType","parentName"]),u=l(n),m=s,f=u["".concat(i,".").concat(m)]||u[m]||p[m]||a;return n?r.createElement(f,o(o({ref:t},d),{},{components:n})):r.createElement(f,o({ref:t},d))}));function f(e,t){var n=arguments,s=t&&t.mdxType;if("string"==typeof e||s){var a=n.length,o=new Array(a);o[0]=m;var c={};for(var i in t)hasOwnProperty.call(t,i)&&(c[i]=t[i]);c.originalType=e,c[u]="string"==typeof e?e:s,o[1]=c;for(var l=2;l<a;l++)o[l]=n[l];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},9831:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>i,contentTitle:()=>o,default:()=>p,frontMatter:()=>a,metadata:()=>c,toc:()=>l});var r=n(7462),s=(n(7294),n(3905));const a={title:"Data Structures"},o=void 0,c={unversionedId:"specs/data-structures",id:"specs/data-structures",title:"Data Structures",description:"This page is still under construction, and should be read as a scratchpad",source:"@site/docs/specs/data-structures.md",sourceDirName:"specs",slug:"/specs/data-structures",permalink:"/specs/data-structures",draft:!1,editUrl:"https://github.com/janhq/jan/tree/main/docs/docs/specs/data-structures.md",tags:[],version:"current",lastUpdatedBy:"Faisal Amir",lastUpdatedAt:1700534782,formattedLastUpdatedAt:"Nov 21, 2023",frontMatter:{title:"Data Structures"},sidebar:"docsSidebar",previous:{title:"Architecture",permalink:"/specs/architecture"},next:{title:"User Interface",permalink:"/specs/user-interface"}},i={},l=[],d={toc:l},u="wrapper";function p(e){let{components:t,...n}=e;return(0,s.kt)(u,(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("admonition",{type:"warning"},(0,s.kt)("p",{parentName:"admonition"},"This page is still under construction, and should be read as a scratchpad")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-sh"},"janroot/\n    assistants/\n        assistant-a/\n            assistant.json\n            src/\n                index.ts\n            threads/\n                thread-a/\n                thread-b\n    models/\n        model-a/\n            model.json\n")),(0,s.kt)("p",null,"Jan use the local filesystem for data persistence, similar to VSCode. This allows for composability and tinkerability."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-sh="},"/janroot               # Jan's root folder (e.g. ~/jan)\n    /models            # For raw AI models\n    /threads           # For conversation history\n    /assistants        # For AI assistants' configs, knowledge, etc.\n")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-sh="},"/models\n    /modelA\n        model.json        # Default model settings\n        llama-7b-q4.gguf  # Model binaries\n        llama-7b-q5.gguf  # Include different quantizations\n/threads\n    /jan-unixstamp-salt\n        model.json        # Overrides assistant/model-level model settings\n        thread.json       # thread metadata (e.g. subject)\n        messages.json     # messages\n        content.json      # What is this?\n        files/            # Future for RAG\n/assistants\n    /jan\n        assistant.json    # Assistant configs (see below)\n\n        # For any custom code\n        package.json      # Import npm modules\n                          # e.g. Langchain, Llamaindex\n        /src              # Supporting files (needs better name)\n            index.js      # Entrypoint\n            process.js    # For electron IPC processes (needs better name)\n\n        # `/threads` at root level\n        # `/models` at root level\n    /shakespeare\n        assistant.json\n        model.json        # Creator chooses model and settings\n        package.json\n        /src\n            index.js\n            process.js\n\n        /threads          # Assistants remember conversations in the future\n        /models           # Users can upload custom models\n            /finetuned-model\n")))}p.isMDXComponent=!0}}]);