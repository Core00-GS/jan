"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[2887],{41837:e=>{e.exports=JSON.parse('{"url":"redocusaurus/plugin-redoc-0.yaml","themeId":"theme-redoc","isSpecFile":true,"spec":{"openapi":"3.0.0","info":{"title":"Jan API Reference","description":"Please see https://jan.ai for documentation."},"version":"0.1.8","contact":{"name":"Jan Discord","url":"https://discord.gg/7EcEz7MrvA"},"license":{"name":"AGPLv3","url":"https://github.com/janhq/nitro/blob/main/LICENSE"},"servers":[{"url":"https://localhost:1337/v1/"}],"tags":[{"name":"Models","description":"List and describe the various models available in the API."},{"name":"Chat Completion","description":"Given a list of messages comprising a conversation, the model will return a response."},{"name":"Messages","description":"Messages capture a conversation\'s content. This can include the content from LLM responses and other metadata from [chat completions](/specs/chats).\\n\\n- Users and assistants can send multimedia messages.\\n\\n- An [OpenAI Message API](https://platform.openai.com/docs/api-reference/messages) compatible endpoint at `localhost:1337/v1/messages`.\\n\\n- Jan\'s `messages` API is compatible with [OpenAI\'s Messages API](https://platform.openai.com/docs/api-reference/messages), with additional methods for managing messages locally.\\n"},{"name":"Threads","description":"Threads are conversations between an `assistant` and the user:\\n  - Users can tweak `model` params and `assistant` behavior within each thread.\\n  - Users can import and export threads.\\n  - An [OpenAI Thread API](https://platform.openai.com/docs/api-reference/threads) compatible endpoint at `localhost:1337/v1/threads`. \\n"},{"name":"Assistants","description":"Configures and utilizes different AI assistants for varied tasks"}],"x-tagGroups":[{"name":"Endpoints","tags":["Models","Chat Completion"]},{"name":"Chat","tags":["Assistants","Messages","Threads"]}],"paths":{"/models":{"get":{"operationId":"listModels","tags":["Models"],"summary":"List Models","description":"Lists the currently available models, and provides basic information about each one such as the owner and availability.","responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ListModelsResponse"}}}}},"x-codeSamples":[{"lang":"curl","source":"curl https://localhost:1337/v1/models\\n"}]},"post":{"operationId":"downloadModel","tags":["Models"],"summary":"Download Model","description":"Download a model.","responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"$ref":"#/components/schemas/DownloadModelResponse"}}}}},"x-codeSamples":[{"lang":"curl","source":"curl -X POST https://localhost:1337/v1/models\\n"}]}},"/models/{model_id}":{"get":{"operationId":"getModel","tags":["Models"],"summary":"Get Model","description":"Get a model instance, providing basic information about the model such as the owner and permissioning.","parameters":[{"in":"path","name":"source_url","required":true,"schema":{"type":"string","example":"https://huggingface.com/thebloke/example.gguf"},"description":"The ID of the model to use for this request"}],"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"$ref":"#/components/schemas/GetModelResponse"}}}}},"x-codeSamples":[{"lang":"curl","source":"curl https://localhost:1337/v1/models/zephyr-7b\\n"}]},"delete":{"operationId":"deleteModel","tags":["Models"],"summary":"Delete Model","description":"Delete a model.","parameters":[{"in":"path","name":"model","required":true,"schema":{"type":"string","example":"zephyr-7b"},"description":"The model to delete"}],"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"$ref":"#/components/schemas/DeleteModelResponse"}}}}},"x-codeSamples":[{"lang":"curl","source":"curl -X DELETE https://localhost:1337/v1/models/zephyr-7b      \\n"}]}},"/models/{model_id}/start":{"put":{"operationId":"startModel","tags":["Models"],"summary":"Start Model","description":"Starts an imported model. Loads the model into V/RAM.","parameters":[{"in":"path","name":"model","required":true,"schema":{"type":"string","example":"zephyr-7b"},"description":"The ID of the model to use for this request"}],"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"$ref":"#/components/schemas/StartModelResponse"}}}}},"x-codeSamples":[{"lang":"curl","source":"curl -X PUT https://localhost:1337/v1/models/zephyr-7b/start      \\n"}]}},"/models/{model_id}/stop":{"put":{"operationId":"stopModel","tags":["Models"],"summary":"Stop Model","description":"Stop an imported model.","parameters":[{"in":"path","name":"model","required":true,"schema":{"type":"string","example":"zephyr-7b"},"description":"The ID of the model to use for this request"}],"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"$ref":"#/components/schemas/StopModelResponse"}}}}},"x-codeSamples":[{"lang":"curl","source":"curl -X PUT https://localhost:1337/v1/models/zephyr-7b/stop\\n"}]}},"/threads":{"post":{"operationId":"createThread","tags":["Threads"],"summary":"Create thread","description":"Create a thread","requestBody":{"required":false,"content":{"application/json":{"schema":{"type":"object","properties":{"messages":{"type":"array","description":"Initial set of messages for the thread.","items":{"$ref":"#/components/schemas/ThreadMessageObject"}}}}}}},"responses":{"200":{"description":"Thread created successfully","content":{"application/json":{"schema":{"$ref":"#/components/schemas/CreateThreadResponse"}}}}},"x-codeSamples":[{"lang":"cURL","source":"curl -X POST {JAN_URL}/v1/threads \\\\\\n  -H \\"Content-Type: application/json\\" \\\\\\n  -d \'{\\n      \\"messages\\": [{\\n          \\"role\\": \\"user\\",\\n          \\"content\\": \\"Hello, what is AI?\\",\\n          \\"file_ids\\": [\\"file-abc123\\"]\\n      }, {\\n          \\"role\\": \\"user\\",\\n          \\"content\\": \\"How does AI work? Explain it in simple terms.\\"\\n      }]\\n  }\'    \\n"}]},"get":{"operationId":"listThreads","tags":["Threads"],"summary":"List threads","description":"Retrieves a list of all threads available in the system.","responses":{"200":{"description":"List of threads retrieved successfully","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/ThreadObject"},"example":[{"id":"thread_abc123","object":"thread","created_at":1699014083,"assistants":["assistant-001"],"metadata":{},"messages":[]},{"id":"thread_abc456","object":"thread","created_at":1699014083,"assistants":["assistant-002","assistant-003"],"metadata":{}}]}}}}},"x-codeSamples":[{"lang":"curl","source":"curl {JAN_URL}/v1/threads \\\\\\n  -H \\"Content-Type: application/json\\" \\\\\\n"}]}},"/threads/{thread_id}":{"get":{"operationId":"getThread","tags":["Threads"],"summary":"Get thread","description":"Retrieves detailed information about a specific thread using its thread_id.","parameters":[{"in":"path","name":"thread_id","required":true,"schema":{"type":"string","example":"thread_abc123"},"description":"The ID of the thread to retrieve."}],"responses":{"200":{"description":"Thread details retrieved successfully","content":{"application/json":{"schema":{"$ref":"#/components/schemas/GetThreadResponse"}}}}},"x-codeSamples":[{"lang":"curl","source":"curl {JAN_URL}/v1/threads/{thread_id}\\n"}]},"post":{"operationId":"modifyThread","tags":["Threads"],"summary":"Modify thread","description":"Modifies a thread","parameters":[{"in":"path","name":"thread_id","required":true,"schema":{"type":"string","example":"thread_abc123"},"description":"The ID of the thread to be modified."}],"requestBody":{"required":false,"content":{"application/json":{"schema":{"type":"object","properties":{"messages":{"type":"array","description":"Set of messages to update in the thread.","items":{"$ref":"#/components/schemas/ThreadMessageObject"}}}}}}},"responses":{"200":{"description":"Thread modified successfully","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ModifyThreadResponse"}}}}},"x-codeSamples":[{"lang":"curl","source":"curl -X POST {JAN_URL}/v1/threads/{thread_id} \\\\\\n  -H \\"Content-Type: application/json\\" \\\\\\n  -d \'{\\n      \\"messages\\": [{\\n          \\"role\\": \\"user\\",\\n          \\"content\\": \\"Hello, what is AI?\\",\\n          \\"file_ids\\": [\\"file-abc123\\"]\\n      }, {\\n          \\"role\\": \\"user\\",\\n          \\"content\\": \\"How does AI work? Explain it in simple terms.\\"\\n      }]\\n  }\'\\n"}]},"delete":{"operationId":"deleteThread","tags":["Threads"],"summary":"Delete thread","description":"Delete a thread","parameters":[{"in":"path","name":"thread_id","required":true,"schema":{"type":"string","example":"thread_abc123"},"description":"The ID of the thread to be deleted."}],"responses":{"200":{"description":"Thread deleted successfully","content":{"application/json":{"schema":{"$ref":"#/components/schemas/DeleteThreadResponse"}}}}},"x-codeSamples":[{"lang":"curl","source":"curl -X DELETE {JAN_URL}/v1/threads/{thread_id}\\n"}]}},"/threads/{thread_id}/assistants":{"get":{"operationId":"getThreadAssistants","tags":["Threads"],"summary":"Get Thread.Assistants","description":["Can achieve this goal by calling Get thread API"],"parameters":[{"in":"path","name":"thread_id","required":true,"schema":{"type":"string","example":"thread_abc123"},"description":"The ID of the thread to retrieve."}],"responses":{"200":{"description":"Thread details retrieved successfully","content":{"application/json":{"schema":{"$ref":"#/components/schemas/GetThreadResponse"}}}}},"x-codeSamples":[{"lang":"curl","source":"curl {JAN_URL}/v1/threads/{thread_id}/assistants\\n"}]}},"/threads/{thread_id}/assistants/{assistants_id}":{"post":{"operationId":"postThreadAssistants","tags":["Threads"],"summary":"Modify Thread.Assistants","description":["Can achieve this goal by calling Modify Assistant API with thread.assistant[]"]}},"/threads/{thread_id}/":{"get":{"operationId":"listThreadMessage","tags":["Threads"],"summary":"List Thread.Messages","description":["Can achieve this goal by calling Get Thread API"],"parameters":[{"in":"path","name":"thread_id","required":true,"schema":{"type":"string","example":"thread_abc123"},"description":"The ID of the thread to retrieve."}],"responses":{"200":{"description":"Thread details retrieved successfully","content":{"application/json":{"schema":{"$ref":"#/components/schemas/GetThreadResponse"}}}}},"x-codeSamples":[{"lang":"curl","source":"curl {JAN_URL}/v1/threads/{thread_id}\\n"}]}},"/threads/{thread_id}/messages":{"get":{"operationId":"listMessages","tags":["Messages"],"summary":"List messaages","description":"Retrieves all messages from the given thread.","parameters":[{"in":"path","name":"thread_id","required":true,"schema":{"type":"string","example":"thread_abc123"},"description":"The ID of the thread from which to retrieve messages."}],"responses":{"200":{"description":"List of messages retrieved successfully","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ListMessagesResponse"}}}}},"x-codeSamples":[{"lang":"curl","source":"curl {JAN_URL}/v1/threads/{thread_id}/messages \\\\\\n  -H \\"Content-Type: application/json\\"\\n"}]},"post":{"operationId":"createMessage","tags":["Messages"],"summary":"Create message","description":"Create a message","parameters":[{"in":"path","name":"thread_id","required":true,"schema":{"type":"string","example":"thread_abc123"},"description":"The ID of the thread to which the message will be posted."}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","properties":{"role":{"type":"string","description":"Role of the sender, either \'user\' or \'assistant\'.","example":"user","enum":["user","assistant"]},"content":{"type":"string","description":"Text content of the message.","example":"How does AI work? Explain it in simple terms."}},"required":["role","content"]}}}},"responses":{"200":{"description":"Message created successfully","content":{"application/json":{"schema":{"$ref":"#/components/schemas/CreateMessageResponse"}}}}},"x-codeSamples":[{"lang":"curl","source":"curl -X POST {JAN_URL}/v1/threads/{thread_id}/messages \\\\\\n  -H \\"Content-Type: application/json\\" \\\\\\n  -d \'{\\n    \\"role\\": \\"user\\",\\n    \\"content\\": \\"How does AI work? Explain it in simple terms.\\"\\n  }\'\\n"}]}},"/threads/{thread_id}/messages/{message_id}":{"get":{"operationId":"retrieveMessage","tags":["Messages"],"summary":"Retrieve Message","description":"Retrieve a specific message from a thread using its thread_id and message_id.","parameters":[{"in":"path","name":"thread_id","required":true,"schema":{"type":"string","example":"thread_abc123"},"description":"The ID of the thread containing the message."},{"in":"path","name":"message_id","required":true,"schema":{"type":"string","example":"msg_abc123"},"description":"The ID of the message to retrieve."}],"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"$ref":"#/components/schemas/GetMessageResponse"}}}}},"x-codeSamples":[{"lang":"curl","source":"curl {JAN_URL}/v1/threads/{thread_id}/messages/{message_id} \\\\\\n  -H \\"Content-Type: application/json\\"\\n"}]}},"/threads/{thread_id}/messages/{message_id}/files":{"get":{"operationId":"listMessageFiles","tags":["Messages"],"summary":"List message files","description":"Returns a list of message files.","parameters":[{"in":"path","name":"thread_id","required":true,"schema":{"type":"string","example":"thread_abc123"},"description":"The ID of the thread containing the message."},{"in":"path","name":"message_id","required":true,"schema":{"type":"string","example":"msg_abc123"},"description":"The ID of the message whose files are to be listed."}],"responses":{"200":{"description":"List of files retrieved successfully","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ListMessageFilesResponse"}}}}},"x-codeSamples":[{"lang":"curl","source":"curl {JAN_URL}/v1/threads/{thread_id}/messages/{message_id}/files \\\\\\n  -H \\"Content-Type: application/json\\"\\n"}]}},"/threads/{thread_id}/messages/{message_id}/files/{file_id}":{"get":{"operationId":"retrieveMessageFile","tags":["Messages"],"summary":"Retrieve message file","description":"Retrieves a file associated with a specific message in a thread.","parameters":[{"in":"path","name":"thread_id","required":true,"schema":{"type":"string","example":"thread_abc123"},"description":"The ID of the thread containing the message."},{"in":"path","name":"message_id","required":true,"schema":{"type":"string","example":"msg_abc123"},"description":"The ID of the message associated with the file."},{"in":"path","name":"file_id","required":true,"schema":{"type":"string","example":"file-abc123"},"description":"The ID of the file to retrieve."}],"responses":{"200":{"description":"File retrieved successfully","content":{"application/json":{"schema":{"$ref":"#/components/schemas/MessageFileObject"}}}}},"x-codeSamples":[{"lang":"curl","source":"curl {JAN_URL}/v1/threads/{thread_id}/messages/{message_id}/files/{file_id} \\\\\\n  -H \\"Content-Type: application/json\\"\\n"}]}}},"x-webhooks":{"ModelObject":{"post":{"summary":"The model object","description":"Information about a model in the systems","operationId":"ModelObject","tags":["Models"],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ModelObject"}}}}}},"MessageObject":{"post":{"summary":"The message object","description":"Information about a message in the thread","operationId":"MessageObject","tags":["Messages"],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/MessageObject"}}}}}},"ThreadObject":{"post":{"summary":"The thread object","description":"- Each `thread` folder contains a `thread.json` file, which is a representation of a thread.\\n- `thread.json` contains metadata and model parameter overrides.\\n- There are no required fields.\\n","operationId":"ThreadObject","tags":["Threads"],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ThreadObject"}}}}}}},"components":{"schemas":{"Model":{"type":"object","properties":{"type":{"type":"string","default":"model","description":"The type of the object."},"version":{"type":"string","default":"1","description":"The version number of the model."},"id":{"type":"string","description":"Unique identifier used in chat-completions model_name, matches folder name.","example":"zephyr-7b"},"name":{"type":"string","description":"Name of the model.","example":"Zephyr 7B"},"owned_by":{"type":"string","description":"Compatibility field for OpenAI.","default":""},"created":{"type":"integer","format":"int64","description":"Unix timestamp representing the creation time."},"description":{"type":"string","description":"Description of the model."},"state":{"type":"string","enum":[null,"downloading","ready","starting","stopping"],"description":"Current state of the model."},"format":{"type":"string","description":"State format of the model, distinct from the engine.","example":"ggufv3"},"source_url":{"type":"string","format":"uri","description":"URL to the source of the model.","example":"https://huggingface.co/TheBloke/zephyr-7B-beta-GGUF/blob/main/zephyr-7b-beta.Q4_K_M.gguf"},"settings":{"type":"object","properties":{"ctx_len":{"type":"string","description":"Context length.","example":"2048"},"ngl":{"type":"string","description":"Number of layers.","example":"100"},"embedding":{"type":"string","description":"Indicates if embedding is enabled.","example":"true"},"n_parallel":{"type":"string","description":"Number of parallel processes.","example":"4"}},"additionalProperties":false},"parameters":{"type":"object","properties":{"temperature":{"type":"string","description":"Temperature setting for the model.","example":"0.7"},"token_limit":{"type":"string","description":"Token limit for the model.","example":"2048"},"top_k":{"type":"string","description":"Top-k setting for the model.","example":"0"},"top_p":{"type":"string","description":"Top-p setting for the model.","example":"1"},"stream":{"type":"string","description":"Indicates if streaming is enabled.","example":"true"}},"additionalProperties":false},"metadata":{"type":"object","description":"Additional metadata."},"assets":{"type":"array","items":{"type":"string"},"description":"List of assets related to the model."}},"required":["source_url"]},"ListModelsResponse":{"type":"object","properties":{"object":{"type":"string","enum":["list"]},"data":{"type":"array","items":{"$ref":"#/components/schemas/Model"}}},"required":["object","data"]},"DownloadModelResponse":{"type":"object","properties":{"id":{"type":"string","description":"The identifier of the model that was started.","example":"model-zephyr-7B"},"object":{"type":"string","description":"Type of the object, indicating it\'s a model.","default":"model"},"state":{"type":"string","description":"The current state of the model after the start operation.","example":"downloaded"}},"required":["id","object","state"]},"GetModelResponse":{"type":"object","properties":{"id":{"type":"string","description":"The identifier of the model.","example":"zephyr-7b"},"object":{"type":"string","description":"Type of the object, indicating it\'s a model.","default":"model"},"created":{"type":"integer","format":"int64","description":"Unix timestamp representing the creation time of the model."},"owned_by":{"type":"string","description":"The entity that owns the model.","example":"_"},"state":{"type":"string","enum":["not_downloaded","downloaded","running","stopped"],"description":"The current state of the model."},"source_url":{"type":"string","format":"uri","description":"URL to the source of the model.","example":"https://huggingface.co/TheBloke/zephyr-7B-beta-GGUF/blob/main/zephyr-7b-beta.Q4_K_M.gguf"},"parameters":{"type":"object","properties":{"ctx_len":{"type":"integer","description":"Context length.","example":2048},"ngl":{"type":"integer","description":"Number of layers.","example":100},"embedding":{"type":"boolean","description":"Indicates if embedding is enabled.","example":true},"n_parallel":{"type":"integer","description":"Number of parallel processes.","example":4},"temperature":{"type":"string","description":"Temperature setting for the model.","example":"0.7"},"token_limit":{"type":"string","description":"Token limit for the model.","example":"2048"},"top_k":{"type":"string","description":"Top-k setting for the model.","example":"0"},"top_p":{"type":"string","description":"Top-p setting for the model.","example":"1"}}},"metadata":{"type":"object","properties":{"engine":{"type":"string","description":"The engine used by the model.","example":"llamacpp"},"quantization":{"type":"string","description":"Quantization parameter of the model.","example":"Q3_K_L"},"size":{"type":"string","description":"Size of the model.","example":"7B"}}}},"required":["id","object","created","owned_by","state","source_url","parameters","metadata"]},"DeleteModelResponse":{"type":"object","properties":{"id":{"type":"string","description":"The identifier of the model that was deleted.","example":"model-zephyr-7B"},"object":{"type":"string","description":"Type of the object, indicating it\'s a model.","default":"model"},"deleted":{"type":"boolean","description":"Indicates whether the model was successfully deleted.","example":true}},"required":["id","object","deleted"]},"StartModelResponse":{"type":"object","properties":{"id":{"type":"string","description":"The identifier of the model that was started.","example":"model-zephyr-7B"},"object":{"type":"string","description":"Type of the object, indicating it\'s a model.","default":"model"},"state":{"type":"string","description":"The current state of the model after the start operation.","example":"running"}},"required":["id","object","state"]},"StopModelResponse":{"type":"object","properties":{"id":{"type":"string","description":"The identifier of the model that was started.","example":"model-zephyr-7B"},"object":{"type":"string","description":"Type of the object, indicating it\'s a model.","default":"model"},"state":{"type":"string","description":"The current state of the model after the start operation.","example":"stopped"}},"required":["id","object","state"]},"ThreadObject":{"type":"object","properties":{"id":{"type":"string","description":"The identifier of the thread, defaults to foldername.","example":"thread_...."},"object":{"type":"string","description":"Type of the object, defaults to thread.","example":"thread"},"summary":{"type":"string","description":"A brief summary or description of the thread, defaults to an empty string.","example":"funny physics joke"},"assistants":{"type":"array","items":{"type":"string"},"description":"List of assistants involved in the thread, defaults to [\\"jan\\"].","example":["jan"]},"created":{"type":"integer","format":"int64","description":"Unix timestamp representing the creation time of the thread, defaults to file creation time.","example":1231231},"metadata":{"type":"object","description":"Metadata associated with the thread, defaults to an empty object.","example":{}},"messages":{"type":"array","description":"List of messages within the thread.","items":{"type":"string"},"example":[]},"model_id":{"type":"string","description":"Model identifier associated with the thread, defaults to assistant.model.","example":"..."},"settings":{"type":"object","description":"Settings for the thread, defaults to and overrides assistant.settings."},"parameters":{"type":"object","description":"Parameters for the thread, defaults to and overrides assistant.settings."}}},"ThreadMessageObject":{"type":"object","properties":{"role":{"type":"string","description":"Role of the sender, either \'user\' or \'assistant\'.","enum":["user","assistant"]},"content":{"type":"string","description":"Text content of the message."},"file_ids":{"type":"array","items":{"type":"string"},"description":"Array of file IDs associated with the message, if any."}}},"CreateThreadResponse":{"type":"object","properties":{"id":{"type":"string","description":"The identifier of the newly created thread.","example":"thread_abc123"},"object":{"type":"string","description":"Type of the object, indicating it\'s a thread.","example":"thread"},"created_at":{"type":"integer","format":"int64","description":"Unix timestamp representing the creation time of the thread.","example":1699014083},"metadata":{"type":"object","description":"Metadata associated with the newly created thread.","example":{}}}},"GetThreadResponse":{"type":"object","properties":{"id":{"type":"string","description":"The identifier of the thread.","example":"thread_abc123"},"object":{"type":"string","description":"Type of the object","example":"thread"},"created_at":{"type":"integer","format":"int64","description":"Unix timestamp representing the creation time of the thread.","example":1699014083},"assistants":{"type":"array","items":{"type":"string"},"description":"List of assistants involved in the thread.","example":["assistant-001"]},"metadata":{"type":"object","description":"Metadata associated with the thread.","example":{}},"messages":{"type":"array","items":{"type":"string"},"description":"List of messages within the thread.","example":[]}}},"ModifyThreadResponse":{"type":"object","properties":{"id":{"type":"string","description":"The identifier of the modified thread.","example":"thread_abc123"},"object":{"type":"string","description":"Type of the object, indicating it\'s a thread.","example":"thread"},"created_at":{"type":"integer","format":"int64","description":"Unix timestamp representing the creation time of the thread.","example":1699014083},"metadata":{"type":"object","description":"Metadata associated with the modified thread.","example":{}}}},"DeleteThreadResponse":{"type":"object","properties":{"id":{"type":"string","description":"The identifier of the deleted thread.","example":"thread_abc123"},"object":{"type":"string","description":"Type of the object, indicating the thread has been deleted.","example":"thread.deleted"},"deleted":{"type":"boolean","description":"Indicates whether the thread was successfully deleted.","example":true}}},"ListMessageObject":{"type":"object","properties":{"id":{"type":"string","description":"The identifier of the message.","example":"msg_abc123"},"object":{"type":"string","description":"Type of the object, indicating it\'s a thread message.","example":"thread.message"},"created_at":{"type":"integer","format":"int64","description":"Unix timestamp representing the creation time of the message.","example":1699017614},"thread_id":{"type":"string","description":"Identifier of the thread to which this message belongs.","example":"thread_abc123"},"role":{"type":"string","description":"Role of the sender, either \'user\' or \'assistant\'.","example":"user"},"content":{"type":"array","items":{"type":"object","properties":{"type":{"type":"string","description":"Type of content, e.g., \'text\'."},"text":{"type":"object","properties":{"value":{"type":"string","description":"Text content of the message.","example":"How does AI work? Explain it in simple terms."},"annotations":{"type":"array","items":{"type":"string"},"description":"Annotations for the text content, if any."}}}}}},"file_ids":{"type":"array","items":{"type":"string"},"description":"Array of file IDs associated with the message, if any.","example":[]},"assistant_id":{"type":"string","description":"Identifier of the assistant involved in the message, if applicable.","example":null},"run_id":{"type":"string","description":"Run ID associated with the message, if applicable.","example":null},"metadata":{"type":"object","description":"Metadata associated with the message.","example":{}}}},"ListMessagesResponse":{"type":"object","properties":{"object":{"type":"string","description":"Type of the object, indicating it\'s a list.","default":"list"},"data":{"type":"array","items":{"$ref":"#/components/schemas/ListMessageObject"}},"first_id":{"type":"string","description":"Identifier of the first message in the list.","example":"msg_abc123"},"last_id":{"type":"string","description":"Identifier of the last message in the list.","example":"msg_abc456"},"has_more":{"type":"boolean","description":"Indicates whether there are more messages to retrieve.","example":false}}},"CreateMessageResponse":{"type":"object","properties":{"id":{"type":"string","description":"The identifier of the created message.","example":"msg_abc123"},"object":{"type":"string","description":"Type of the object, indicating it\'s a thread message.","example":"thread.message"},"created_at":{"type":"integer","format":"int64","description":"Unix timestamp representing the creation time of the message.","example":1699017614},"thread_id":{"type":"string","description":"Identifier of the thread to which this message belongs.","example":"thread_abc123"},"role":{"type":"string","description":"Role of the sender, either \'user\' or \'assistant\'.","example":"user"},"content":{"type":"array","items":{"type":"object","properties":{"type":{"type":"string","description":"Type of content, e.g., \'text\'.","example":"text"},"text":{"type":"object","properties":{"value":{"type":"string","description":"Text content of the message.","example":"How does AI work? Explain it in simple terms."},"annotations":{"type":"array","items":{"type":"string"},"description":"Annotations for the text content, if any.","example":[]}}}}}},"file_ids":{"type":"array","items":{"type":"string"},"description":"Array of file IDs associated with the message, if any.","example":[]},"assistant_id":{"type":"string","description":"Identifier of the assistant involved in the message, if applicable.","example":null},"run_id":{"type":"string","description":"Run ID associated with the message, if applicable.","example":null},"metadata":{"type":"object","description":"Metadata associated with the message.","example":{}}}},"GetMessageResponse":{"type":"object","properties":{"id":{"type":"string","description":"The identifier of the message.","example":"msg_abc123"},"object":{"type":"string","description":"Type of the object, indicating it\'s a thread message.","default":"thread.message"},"created_at":{"type":"integer","format":"int64","description":"Unix timestamp representing the creation time of the message.","example":1699017614},"thread_id":{"type":"string","description":"Identifier of the thread to which this message belongs.","example":"thread_abc123"},"role":{"type":"string","description":"Role of the sender, either \'user\' or \'assistant\'.","example":"user"},"content":{"type":"array","items":{"type":"object","properties":{"type":{"type":"string","description":"Type of content, e.g., \'text\'.","example":"text"},"text":{"type":"object","properties":{"value":{"type":"string","description":"Text content of the message.","example":"How does AI work? Explain it in simple terms."},"annotations":{"type":"array","items":{"type":"string"},"description":"Annotations for the text content, if any.","example":[]}}}}}},"file_ids":{"type":"array","items":{"type":"string"},"description":"Array of file IDs associated with the message, if any.","example":[]},"assistant_id":{"type":"string","description":"Identifier of the assistant involved in the message, if applicable.","example":null},"run_id":{"type":"string","description":"Run ID associated with the message, if applicable.","example":null},"metadata":{"type":"object","description":"Metadata associated with the message.","example":{}}}},"MessageFileObject":{"type":"object","properties":{"id":{"type":"string","description":"The identifier of the file.","example":"file-abc123"},"object":{"type":"string","description":"Type of the object, indicating it\'s a thread message file.","example":"thread.message.file"},"created_at":{"type":"integer","format":"int64","description":"Unix timestamp representing the creation time of the file.","example":1699061776},"message_id":{"type":"string","description":"Identifier of the message to which this file is associated.","example":"msg_abc123"}}},"ListMessageFilesResponse":{"type":"object","properties":{"object":{"type":"string","description":"Type of the object, indicating it\'s a list.","default":"list"},"data":{"type":"array","items":{"$ref":"#/components/schemas/MessageFileObject"}}}},"ModelObject":{"type":"object","properties":{"id":{"type":"string","description":"The identifier of the model.","example":"zephyr-7b"},"object":{"type":"string","description":"The type of the object, indicating it\'s a model.","default":"model"},"created":{"type":"integer","format":"int64","description":"Unix timestamp representing the creation time of the model.","example":"1253935178"},"owned_by":{"type":"string","description":"The entity that owns the model.","example":"_"}},"required":["id","object","created","owned_by"]},"MessageObject":{"type":"object","properties":{"id":{"type":"string","description":"Sequential or UUID identifier of the message.","example":0},"object":{"type":"string","description":"Type of the object, defaults to \'thread.message\'.","example":"thread.message"},"created_at":{"type":"integer","format":"int64","description":"Unix timestamp representing the creation time of the message."},"thread_id":{"type":"string","description":"Identifier of the thread to which this message belongs. Defaults to parent thread.","example":"thread_asdf"},"assistant_id":{"type":"string","description":"Identifier of the assistant involved in the message. Defaults to parent thread.","example":"jan"},"role":{"type":"string","enum":["user","assistant"],"description":"Role of the sender, either \'user\' or \'assistant\'."},"content":{"type":"array","items":{"type":"object","properties":{"type":{"type":"string","description":"Type of content, e.g., \'text\'."},"text":{"type":"object","properties":{"value":{"type":"string","description":"Text content of the message.","example":"Hi!?"},"annotations":{"type":"array","items":{"type":"string"},"description":"Annotations for the text content, if any.","example":[]}}}}}},"metadata":{"type":"object","description":"Metadata associated with the message, defaults to an empty object.","example":{}}}}}}}}')}}]);