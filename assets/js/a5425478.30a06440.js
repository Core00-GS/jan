"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[7211],{3905:(e,t,a)=>{a.d(t,{Zo:()=>l,kt:()=>f});var s=a(7294);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function r(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);t&&(s=s.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,s)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?r(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):r(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function i(e,t){if(null==e)return{};var a,s,n=function(e,t){if(null==e)return{};var a,s,n={},r=Object.keys(e);for(s=0;s<r.length;s++)a=r[s],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(s=0;s<r.length;s++)a=r[s],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var p=s.createContext({}),c=function(e){var t=s.useContext(p),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},l=function(e){var t=c(e.components);return s.createElement(p.Provider,{value:t},e.children)},m="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return s.createElement(s.Fragment,{},t)}},u=s.forwardRef((function(e,t){var a=e.components,n=e.mdxType,r=e.originalType,p=e.parentName,l=i(e,["components","mdxType","originalType","parentName"]),m=c(a),u=n,f=m["".concat(p,".").concat(u)]||m[u]||d[u]||r;return a?s.createElement(f,o(o({ref:t},l),{},{components:a})):s.createElement(f,o({ref:t},l))}));function f(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var r=a.length,o=new Array(r);o[0]=u;var i={};for(var p in t)hasOwnProperty.call(t,p)&&(i[p]=t[p]);i.originalType=e,i[m]="string"==typeof e?e:n,o[1]=i;for(var c=2;c<r;c++)o[c]=a[c];return s.createElement.apply(null,o)}return s.createElement.apply(null,a)}u.displayName="MDXCreateElement"},6411:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>p,contentTitle:()=>o,default:()=>d,frontMatter:()=>r,metadata:()=>i,toc:()=>c});var s=a(7462),n=(a(7294),a(3905));const r={title:"Messages"},o=void 0,i={unversionedId:"docs/specs/messages",id:"docs/specs/messages",title:"Messages",description:"Draft Specification: functionality has not been implemented yet.",source:"@site/docs/docs/specs/messages.md",sourceDirName:"docs/specs",slug:"/docs/specs/messages",permalink:"/docs/specs/messages",draft:!1,editUrl:"https://github.com/janhq/jan/tree/main/docs/docs/docs/specs/messages.md",tags:[],version:"current",lastUpdatedBy:"Faisal Amir",lastUpdatedAt:1700225581,formattedLastUpdatedAt:"Nov 17, 2023",frontMatter:{title:"Messages"},sidebar:"docsSidebar",previous:{title:"Threads",permalink:"/docs/specs/threads"},next:{title:"Assistants",permalink:"/docs/specs/assistants"}},p={},c=[{value:"Message Object",id:"message-object",level:2},{value:"Messages API",id:"messages-api",level:2}],l={toc:c},m="wrapper";function d(e){let{components:t,...a}=e;return(0,n.kt)(m,(0,s.Z)({},l,a,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("admonition",{type:"warning"},(0,n.kt)("p",{parentName:"admonition"},"Draft Specification: functionality has not been implemented yet. "),(0,n.kt)("p",{parentName:"admonition"},"Feedback: ",(0,n.kt)("a",{parentName:"p",href:"https://hackmd.io/BM_8o_OCQ-iLCYhunn2Aug"},"HackMD: Threads Spec"))),(0,n.kt)("p",null,"Messages are within ",(0,n.kt)("inlineCode",{parentName:"p"},"threads")," and capture additional metadata."),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Equivalent to: ",(0,n.kt)("a",{parentName:"li",href:"https://platform.openai.com/docs/api-reference/messages"},"https://platform.openai.com/docs/api-reference/messages"))),(0,n.kt)("h2",{id:"message-object"},"Message Object"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Equivalent to: ",(0,n.kt)("a",{parentName:"li",href:"https://platform.openai.com/docs/api-reference/messages/object"},"https://platform.openai.com/docs/api-reference/messages/object"))),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-json"},'{\n  // Jan specific properties\n  "updatedAt": "..." // that\'s it I think\n\n  // OpenAI compatible properties: https://platform.openai.com/docs/api-reference/messages)\n  "id": "msg_dKYDWyQvtjDBi3tudL1yWKDa",\n  "object": "thread.message",\n  "created_at": 1698983503,\n  "thread_id": "thread_RGUhOuO9b2nrktrmsQ2uSR6I",\n  "role": "assistant",\n  "content": [\n    {\n      "type": "text",\n      "text": {\n        "value": "Hi! How can I help you today?",\n        "annotations": []\n      }\n    }\n  ],\n  "file_ids": [],\n  "assistant_id": "asst_ToSF7Gb04YMj8AMMm50ZLLtY",\n  "run_id": "run_BjylUJgDqYK9bOhy4yjAiMrn",\n  "metadata": {}\n}\n')),(0,n.kt)("h2",{id:"messages-api"},"Messages API"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Equivalent to: ",(0,n.kt)("a",{parentName:"li",href:"https://platform.openai.com/docs/api-reference/messages"},"https://platform.openai.com/docs/api-reference/messages"))),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-sh"},"POST https://api.openai.com/v1/threads/{thread_id}/messages # create msg\nGET https://api.openai.com/v1/threads/{thread_id}/messages  # list messages\nGET https://api.openai.com/v1/threads/{thread_id}/messages/{message_id}\n\n# Get message file\nGET https://api.openai.com/v1/threads/{thread_id}/messages/{message_id}/files/{file_id}\n# List message files\nGET https://api.openai.com/v1/threads/{thread_id}/messages/{message_id}/files\n")))}d.isMDXComponent=!0}}]);