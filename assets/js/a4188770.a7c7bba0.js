(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[3316],{3905:(e,t,n)=>{"use strict";n.d(t,{Zo:()=>s,kt:()=>k});var l=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);t&&(l=l.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,l)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function r(e,t){if(null==e)return{};var n,l,a=function(e,t){if(null==e)return{};var n,l,a={},o=Object.keys(e);for(l=0;l<o.length;l++)n=o[l],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(l=0;l<o.length;l++)n=o[l],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var d=l.createContext({}),m=function(e){var t=l.useContext(d),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},s=function(e){var t=m(e.components);return l.createElement(d.Provider,{value:t},e.children)},p="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return l.createElement(l.Fragment,{},t)}},c=l.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,d=e.parentName,s=r(e,["components","mdxType","originalType","parentName"]),p=m(n),c=a,k=p["".concat(d,".").concat(c)]||p[c]||u[c]||o;return n?l.createElement(k,i(i({ref:t},s),{},{components:n})):l.createElement(k,i({ref:t},s))}));function k(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=c;var r={};for(var d in t)hasOwnProperty.call(t,d)&&(r[d]=t[d]);r.originalType=e,r[p]="string"==typeof e?e:a,i[1]=r;for(var m=2;m<o;m++)i[m]=n[m];return l.createElement.apply(null,i)}return l.createElement.apply(null,n)}c.displayName="MDXCreateElement"},7114:(e,t,n)=>{"use strict";n.r(t),n.d(t,{assets:()=>N,contentTitle:()=>h,default:()=>y,frontMatter:()=>k,metadata:()=>g,toc:()=>f});var l=n(7462),a=n(7294),o=n(3905),i=n(6010),r=n(508),d=(n(1793),n(2933)),m=n(9009),s=n(8084);function p(e){const t=(0,s.OD)("docusaurus-plugin-redoc");return e?t?.[e]:Object.values(t??{})?.[0]}const u=e=>{let{id:t,example:n,pointer:o,...s}=e;const u=p(t),{store:c}=(0,m.U)(u);return(0,a.useEffect)((()=>{c.menu.dispose()}),[c]),a.createElement(r.ThemeProvider,{theme:c.options.theme},a.createElement("div",{className:(0,i.Z)(["redocusaurus","redocusaurus-schema",n?null:"hide-example"])},a.createElement(d.SchemaDefinition,(0,l.Z)({parser:c.spec.parser,options:c.options,schemaRef:o},s))))};u.defaultProps={example:!1};const c=u,k={title:"Models"},h=void 0,g={unversionedId:"specs/models",id:"specs/models",title:"Models",description:"Draft Specification: functionality has not been implemented yet.",source:"@site/docs/specs/models.md",sourceDirName:"specs",slug:"/specs/models",permalink:"/specs/models",draft:!1,editUrl:"https://github.com/janhq/jan/tree/main/docs/docs/specs/models.md",tags:[],version:"current",lastUpdatedBy:"Faisal Amir",lastUpdatedAt:1700534782,formattedLastUpdatedAt:"Nov 21, 2023",frontMatter:{title:"Models"},sidebar:"docsSidebar",previous:{title:"Chats",permalink:"/specs/chats"}},N={},f=[{value:"Overview",id:"overview",level:2},{value:"Objectives",id:"objectives",level:3},{value:"Models Folder",id:"models-folder",level:2},{value:"Importing Models",id:"importing-models",level:3},{value:"Model Object",id:"model-object",level:2},{value:"Types of Models",id:"types-of-models",level:3},{value:"Local Models",id:"local-models",level:4},{value:"Remote Models",id:"remote-models",level:4},{value:"Importers",id:"importers",level:3},{value:"Multiple Binaries",id:"multiple-binaries",level:3},{value:"Models API",id:"models-api",level:2},{value:"Examples",id:"examples",level:2},{value:"Local Model",id:"local-model",level:3},{value:"Remote Model",id:"remote-model",level:3},{value:"Deferred Download",id:"deferred-download",level:3},{value:"Multiple quantizations",id:"multiple-quantizations",level:3},{value:"Multiple model partitions",id:"multiple-model-partitions",level:3},{value:"Locally fine-tuned model",id:"locally-fine-tuned-model",level:3}],b={toc:f},v="wrapper";function y(e){let{components:t,...n}=e;return(0,o.kt)(v,(0,l.Z)({},b,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("admonition",{type:"warning"},(0,o.kt)("p",{parentName:"admonition"},"Draft Specification: functionality has not been implemented yet. "),(0,o.kt)("p",{parentName:"admonition"},"Feedback: ",(0,o.kt)("a",{parentName:"p",href:"https://hackmd.io/ulO3uB1AQCqLa5SAAMFOQw"},"HackMD: Models Spec")," ")),(0,o.kt)("h2",{id:"overview"},"Overview"),(0,o.kt)("p",null,"Jan's Model API aims to be as similar as possible to ",(0,o.kt)("a",{parentName:"p",href:"https://platform.openai.com/docs/api-reference/models"},"OpenAI's Models API"),", with additional methods for managing and running models locally. "),(0,o.kt)("h3",{id:"objectives"},"Objectives"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Users can download, import and delete models  "),(0,o.kt)("li",{parentName:"ul"},"Users can use remote models (e.g. OpenAI, OpenRouter)"),(0,o.kt)("li",{parentName:"ul"},"Users can start/stop models and use them in a thread (or via Chat Completions API)"),(0,o.kt)("li",{parentName:"ul"},"User can configure default model parameters at the model level (to be overridden later at message or thread level)")),(0,o.kt)("h2",{id:"models-folder"},"Models Folder"),(0,o.kt)("p",null,"Models in Jan are stored in the ",(0,o.kt)("inlineCode",{parentName:"p"},"/models")," folder."),(0,o.kt)("p",null,"Models are stored and organized by folders, which are atomic representations of a model for easy packaging and version control. "),(0,o.kt)("p",null,"A model's folder name is its ",(0,o.kt)("inlineCode",{parentName:"p"},"model.id")," and contains:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"<model-id>.json"),", i.e. the ",(0,o.kt)("a",{parentName:"li",href:"#model-object"},"Model Object")),(0,o.kt)("li",{parentName:"ul"},"Binaries (may be downloaded later)")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},"/jan    # Jan root folder\n    /models\n        # GGUF model\n        /llama2-70b\n            llama2-70b.json\n            llama2-70b-q4_k_m.gguf\n\n        # Recommended Model (yet to be downloaded)\n        /mistral-7b\n            mistral-7b.json     # Contains download instructions\n            # Note: mistral-7b-*.gguf binaries not downloaded yet\n\n        # Remote model\n        /azure-openai-gpt3-5\n            azure-openai-gpt3-5.json     \n            # Note: No binaries\n\n        # Multiple Binaries\n        # COMING SOON\n\n        # Multiple Quantizations\n        # COMING SOON\n\n        # Imported model (autogenerated .json)\n        random-model-q4_k_m.bin\n        # Note: will be moved into a autogenerated folder \n        # /random-model-q4_k_m \n        #   random-model-q4_k_m.bin\n        #   random-model-q4_k_m.json (autogenerated)\n")),(0,o.kt)("h3",{id:"importing-models"},"Importing Models"),(0,o.kt)("admonition",{type:"warning"},(0,o.kt)("ul",{parentName:"admonition"},(0,o.kt)("li",{parentName:"ul"},"This has not been confirmed"),(0,o.kt)("li",{parentName:"ul"},"Dan's view: Jan should auto-detect and create folders automatically"),(0,o.kt)("li",{parentName:"ul"},"Jan's UI will allow users to rename folders and add metadata"))),(0,o.kt)("p",null,"You can import a model by just dragging it into the ",(0,o.kt)("inlineCode",{parentName:"p"},"/models")," folder, similar to Oobabooga. "),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Jan will detect and generate a corresponding ",(0,o.kt)("inlineCode",{parentName:"li"},"model-filename.json")," file based on filename"),(0,o.kt)("li",{parentName:"ul"},"Jan will move it into its own ",(0,o.kt)("inlineCode",{parentName:"li"},"/model-id")," folder once you define a ",(0,o.kt)("inlineCode",{parentName:"li"},"model-id")," via the UI"),(0,o.kt)("li",{parentName:"ul"},"Jan will populate the model's ",(0,o.kt)("inlineCode",{parentName:"li"},"model-id.json")," as you add metadata through the UI")),(0,o.kt)("h2",{id:"model-object"},"Model Object"),(0,o.kt)("admonition",{type:"warning"},(0,o.kt)("ul",{parentName:"admonition"},(0,o.kt)("li",{parentName:"ul"},"This is currently not finalized"),(0,o.kt)("li",{parentName:"ul"},"Dan's view: I think the current JSON is extremely clunky",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"We should move ",(0,o.kt)("inlineCode",{parentName:"li"},"init"),' to top-level (e.g. "settings"?)'),(0,o.kt)("li",{parentName:"ul"},"We should move ",(0,o.kt)("inlineCode",{parentName:"li"},"runtime"),' to top-level (e.g. "parameters"?)'),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"metadata")," is extremely overloaded and should be refactored"))),(0,o.kt)("li",{parentName:"ul"},"Dan's view: we should make a model object very extensible",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"A ",(0,o.kt)("inlineCode",{parentName:"li"},"GGUF"),' model would "extend" a common model object with extra fields (at top level)'))),(0,o.kt)("li",{parentName:"ul"},"Dan's view: State is extremely badly named",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"Recommended: ",(0,o.kt)("inlineCode",{parentName:"li"},"downloaded"),", ",(0,o.kt)("inlineCode",{parentName:"li"},"started"),", ",(0,o.kt)("inlineCode",{parentName:"li"},"stopped"),", null (for yet-to-download)"),(0,o.kt)("li",{parentName:"ul"},"We should also note that this is only for local models (not remote)"))))),(0,o.kt)("p",null,"Jan represents models as ",(0,o.kt)("inlineCode",{parentName:"p"},"json"),"-based Model Object files, known colloquially as ",(0,o.kt)("inlineCode",{parentName:"p"},"model.jsons"),". Jan aims for rough equivalence with ",(0,o.kt)("a",{parentName:"p",href:"https://platform.openai.com/docs/api-reference/models/object"},"OpenAI's Model Object")," with additional properties to support local models.  "),(0,o.kt)("p",null,"Jan's models follow a ",(0,o.kt)("inlineCode",{parentName:"p"},"model_id.json")," naming convention, and are built to be extremely lightweight, with the only mandatory field being a ",(0,o.kt)("inlineCode",{parentName:"p"},"source_url")," to download the model binaries. "),(0,o.kt)(c,{example:!0,pointer:"#/components/schemas/Model",mdxType:"ApiSchema"}),(0,o.kt)("h3",{id:"types-of-models"},"Types of Models"),(0,o.kt)("admonition",{type:"warning"},(0,o.kt)("ul",{parentName:"admonition"},(0,o.kt)("li",{parentName:"ul"},"This is currently not in the Model Object, and requires further discussion."),(0,o.kt)("li",{parentName:"ul"},"Dan's view: we should have a field to differentiate between ",(0,o.kt)("inlineCode",{parentName:"li"},"local")," and ",(0,o.kt)("inlineCode",{parentName:"li"},"remote")," models"))),(0,o.kt)("p",null,"There are 3 types of models. "),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Local model"),(0,o.kt)("li",{parentName:"ul"},"Local model, yet-to-be downloaded (we have the URL)"),(0,o.kt)("li",{parentName:"ul"},"Remote model (i.e. OpenAI API)")),(0,o.kt)("h4",{id:"local-models"},"Local Models"),(0,o.kt)("admonition",{type:"warning"},(0,o.kt)("ul",{parentName:"admonition"},(0,o.kt)("li",{parentName:"ul"},"This is currently not finalized"),(0,o.kt)("li",{parentName:"ul"},"Dan's view: we should have ",(0,o.kt)("inlineCode",{parentName:"li"},"download_url")," and ",(0,o.kt)("inlineCode",{parentName:"li"},"local_url")," for local models (and possibly more)"))),(0,o.kt)("p",null,"A ",(0,o.kt)("inlineCode",{parentName:"p"},"model.json")," for a local model should always reference the following fields: "),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"download_url"),": the original download source of the model"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"local_url"),": the current location of the model binaries (may be array of multiple binaries)")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'// ./models/llama2/llama2-7bn-gguf.json\n"local_url": "~/Downloads/llama-2-7bn-q5-k-l.gguf",\n')),(0,o.kt)("h4",{id:"remote-models"},"Remote Models"),(0,o.kt)("admonition",{type:"warning"},(0,o.kt)("ul",{parentName:"admonition"},(0,o.kt)("li",{parentName:"ul"},"This is currently not finalized "),(0,o.kt)("li",{parentName:"ul"},"Dan's view: each cloud model should be provided via a syste module, or define its own params field on the ",(0,o.kt)("inlineCode",{parentName:"li"},"model")," or ",(0,o.kt)("inlineCode",{parentName:"li"},"model.init")," object"))),(0,o.kt)("p",null,"A ",(0,o.kt)("inlineCode",{parentName:"p"},"model.json")," for a remote model should always reference the following fields:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"api_url"),": the API endpoint of the model"),(0,o.kt)("li",{parentName:"ul"},"Any authentication parameters")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'// Dan\'s view: This needs to be refactored pretty significantly\n"source_url": "https://docs-test-001.openai.azure.com/openai.azure.com/docs-test-001/gpt4-turbo",\n"parameters": {\n  "init" {\n    "API-KEY": "",\n    "DEPLOYMENT-NAME": "",\n    "api-version": "2023-05-15"\n  },\n  "runtime": {\n    "temperature": "0.7",\n    "max_tokens": "2048",\n    "presence_penalty": "0",\n    "top_p": "1",\n    "stream": "true"\n  }\n}\n"metadata": {\n    "engine": "api",        // Dan\'s view: this should be a `type` field\n}\n')),(0,o.kt)("h3",{id:"importers"},"Importers"),(0,o.kt)("admonition",{type:"caution"},(0,o.kt)("ul",{parentName:"admonition"},(0,o.kt)("li",{parentName:"ul"},"This is only an idea, has not been confirmed as part of spec"))),(0,o.kt)("p",null,'Jan builds "importers" for users to seamlessly import models from a single URL. '),(0,o.kt)("p",null,"We currently only provide this for ",(0,o.kt)("a",{parentName:"p",href:"https://huggingface.co/TheBloke"},"TheBloke models on Huggingface")," (i.e. one of the patron saints of llama.cpp), but we plan to add more in the future. "),(0,o.kt)("p",null,"Currently, pasting a TheBloke Huggingface link in the Explore Models page will fire an importer, resulting in an: "),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Nicely-formatted model card"),(0,o.kt)("li",{parentName:"ul"},"Fully-annotated ",(0,o.kt)("inlineCode",{parentName:"li"},"model.json")," file")),(0,o.kt)("h3",{id:"multiple-binaries"},"Multiple Binaries"),(0,o.kt)("admonition",{type:"warning"},(0,o.kt)("ul",{parentName:"admonition"},(0,o.kt)("li",{parentName:"ul"},"This is currently not finalized"),(0,o.kt)("li",{parentName:"ul"},"Dan's view: having these fields under ",(0,o.kt)("inlineCode",{parentName:"li"},"model.metadata")," is not maintainable"),(0,o.kt)("li",{parentName:"ul"},"We should explore some sort of ",(0,o.kt)("inlineCode",{parentName:"li"},"local_url")," structure"))),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Model has multiple binaries ",(0,o.kt)("inlineCode",{parentName:"li"},"model-llava-1.5-ggml.json")),(0,o.kt)("li",{parentName:"ul"},"See ",(0,o.kt)("a",{parentName:"li",href:"https://huggingface.co/mys/ggml_llava-v1.5-13b"},"source"))),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'"source_url": "https://huggingface.co/mys/ggml_llava-v1.5-13b",\n"parameters": {"init": {}, "runtime": {}}\n"metadata": {\n    "mmproj_binary": "https://huggingface.co/mys/ggml_llava-v1.5-13b/blob/main/mmproj-model-f16.gguf",\n    "ggml_binary": "https://huggingface.co/mys/ggml_llava-v1.5-13b/blob/main/ggml-model-q5_k.gguf",\n    "engine": "llamacpp",\n    "quantization": "Q5_K"\n}\n')),(0,o.kt)("h2",{id:"models-api"},"Models API"),(0,o.kt)("admonition",{type:"warning"},(0,o.kt)("ul",{parentName:"admonition"},(0,o.kt)("li",{parentName:"ul"},"We should use the OpenAPI spec to discuss APIs"),(0,o.kt)("li",{parentName:"ul"},"Dan's view: This needs @louis and App Pod to review as they are more familiar with this"),(0,o.kt)("li",{parentName:"ul"},"Dan's view: Start/Stop model should have some UI indicator (show state, block input) "))),(0,o.kt)("p",null,"See http://localhost:3001/api-reference#tag/Models. "),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null},"Method"),(0,o.kt)("th",{parentName:"tr",align:null},"API Call"),(0,o.kt)("th",{parentName:"tr",align:null},"OpenAI-equivalent"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"List Models"),(0,o.kt)("td",{parentName:"tr",align:null},"GET /v1/models"),(0,o.kt)("td",{parentName:"tr",align:null},"true")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"Get Model"),(0,o.kt)("td",{parentName:"tr",align:null},"GET /v1/models/{model_id}"),(0,o.kt)("td",{parentName:"tr",align:null},"true")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"Delete Model"),(0,o.kt)("td",{parentName:"tr",align:null},"DELETE /v1/models/{model_id}"),(0,o.kt)("td",{parentName:"tr",align:null},"true")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"Start Model"),(0,o.kt)("td",{parentName:"tr",align:null},"PUT /v1/models/{model_id}/start"),(0,o.kt)("td",{parentName:"tr",align:null})),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"Stop Model"),(0,o.kt)("td",{parentName:"tr",align:null},"PUT /v1/models/{model_id}/start"),(0,o.kt)("td",{parentName:"tr",align:null})),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"Download Model"),(0,o.kt)("td",{parentName:"tr",align:null},"POST /v1/models/"),(0,o.kt)("td",{parentName:"tr",align:null})))),(0,o.kt)("h2",{id:"examples"},"Examples"),(0,o.kt)("h3",{id:"local-model"},"Local Model"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Model has 1 binary ",(0,o.kt)("inlineCode",{parentName:"li"},"model-zephyr-7B.json")),(0,o.kt)("li",{parentName:"ul"},"See ",(0,o.kt)("a",{parentName:"li",href:"https://huggingface.co/TheBloke/zephyr-7B-beta-GGUF/"},"source"))),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'// ./models/zephr/zephyr-7b-beta-Q4_K_M.json\n// Note: Default fields omitted for brevity\n"source_url": "https://huggingface.co/TheBloke/zephyr-7B-beta-GGUF/blob/main/zephyr-7b-beta.Q4_K_M.gguf",\n"parameters": {\n  "init": {\n    "ctx_len": "2048",\n    "ngl": "100",\n    "embedding": "true",\n    "n_parallel": "4",\n    "pre_prompt": "A chat between a curious user and an artificial intelligence",\n    "user_prompt": "USER: ",\n    "ai_prompt": "ASSISTANT: "\n  },\n  "runtime": {\n    "temperature": "0.7",\n    "token_limit": "2048",\n    "top_k": "0",\n    "top_p": "1",\n    "stream": "true"\n  }\n},\n"metadata": {\n    "engine": "llamacpp",\n    "quantization": "Q3_K_L",\n    "size": "7B",\n}\n')),(0,o.kt)("h3",{id:"remote-model"},"Remote Model"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Using a remote API to access model ",(0,o.kt)("inlineCode",{parentName:"li"},"model-azure-openai-gpt4-turbo.json")),(0,o.kt)("li",{parentName:"ul"},"See ",(0,o.kt)("a",{parentName:"li",href:"https://learn.microsoft.com/en-us/azure/ai-services/openai/quickstart?tabs=command-line%2Cpython&pivots=rest-api"},"source"))),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'"source_url": "https://docs-test-001.openai.azure.com/openai.azure.com/docs-test-001/gpt4-turbo",\n"parameters": {\n  "init" {\n    "API-KEY": "",\n    "DEPLOYMENT-NAME": "",\n    "api-version": "2023-05-15"\n  },\n  "runtime": {\n    "temperature": "0.7",\n    "max_tokens": "2048",\n    "presence_penalty": "0",\n    "top_p": "1",\n    "stream": "true"\n  }\n}\n"metadata": {\n    "engine": "api",\n}\n')),(0,o.kt)("h3",{id:"deferred-download"},"Deferred Download"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Jan ships with a default model folders containing recommended models"),(0,o.kt)("li",{parentName:"ul"},"Only the Model Object ",(0,o.kt)("inlineCode",{parentName:"li"},"json")," files are included"),(0,o.kt)("li",{parentName:"ul"},"Users must later explicitly download the model binaries"),(0,o.kt)("li",{parentName:"ul"})),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-sh"},"models/\n    mistral-7b/\n        mistral-7b.json\n    hermes-7b/\n        hermes-7b.json\n")),(0,o.kt)("h3",{id:"multiple-quantizations"},"Multiple quantizations"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Each quantization has its own ",(0,o.kt)("inlineCode",{parentName:"li"},"Jan Model Object")," file"),(0,o.kt)("li",{parentName:"ul"},"TODO: ",(0,o.kt)("inlineCode",{parentName:"li"},"model.json"),"?")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-sh"},"llama2-7b-gguf/\n    llama2-7b-gguf-Q2.json\n    llama2-7b-gguf-Q3_K_L.json\n    .bin\n")),(0,o.kt)("h3",{id:"multiple-model-partitions"},"Multiple model partitions"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"A Model that is partitioned into several binaries use just 1 file")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-sh"},"llava-ggml/\n    llava-ggml-Q5.json\n    .proj\n    ggml\n")),(0,o.kt)("h3",{id:"locally-fine-tuned-model"},"Locally fine-tuned model"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-sh"},"llama-70b-finetune/\n    llama-70b-finetune-q5.json\n    .bin\n")))}y.isMDXComponent=!0},6242:()=>{},1314:()=>{},7251:()=>{},9018:()=>{},3044:()=>{},3408:()=>{},5126:()=>{}}]);