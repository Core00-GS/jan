"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[2320],{3905:(e,t,a)=>{a.d(t,{Zo:()=>c,kt:()=>k});var n=a(7294);function s(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function r(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){s(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function i(e,t){if(null==e)return{};var a,n,s=function(e,t){if(null==e)return{};var a,n,s={},o=Object.keys(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||(s[a]=e[a]);return s}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(s[a]=e[a])}return s}var l=n.createContext({}),p=function(e){var t=n.useContext(l),a=t;return e&&(a="function"==typeof e?e(t):r(r({},t),e)),a},c=function(e){var t=p(e.components);return n.createElement(l.Provider,{value:t},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var a=e.components,s=e.mdxType,o=e.originalType,l=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),u=p(a),d=s,k=u["".concat(l,".").concat(d)]||u[d]||m[d]||o;return a?n.createElement(k,r(r({ref:t},c),{},{components:a})):n.createElement(k,r({ref:t},c))}));function k(e,t){var a=arguments,s=t&&t.mdxType;if("string"==typeof e||s){var o=a.length,r=new Array(o);r[0]=d;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i[u]="string"==typeof e?e:s,r[1]=i;for(var p=2;p<o;p++)r[p]=a[p];return n.createElement.apply(null,r)}return n.createElement.apply(null,a)}d.displayName="MDXCreateElement"},7281:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>l,contentTitle:()=>r,default:()=>m,frontMatter:()=>o,metadata:()=>i,toc:()=>p});var n=a(7462),s=(a(7294),a(3905));const o={title:"Assistants"},r=void 0,i={unversionedId:"docs/specs/assistants",id:"docs/specs/assistants",title:"Assistants",description:"Assistants can use models and tools.",source:"@site/docs/docs/specs/assistants.md",sourceDirName:"docs/specs",slug:"/docs/specs/assistants",permalink:"/docs/specs/assistants",draft:!1,editUrl:"https://github.com/janhq/jan/tree/main/docs/docs/docs/specs/assistants.md",tags:[],version:"current",lastUpdatedBy:"Daniel",lastUpdatedAt:1700318573,formattedLastUpdatedAt:"Nov 18, 2023",frontMatter:{title:"Assistants"},sidebar:"docsSidebar",previous:{title:"Messages",permalink:"/docs/specs/messages"},next:{title:"Files",permalink:"/docs/specs/files"}},l={},p=[{value:"User Stories",id:"user-stories",level:2},{value:"Assistant Object",id:"assistant-object",level:2},{value:"Assistant lifecycle",id:"assistant-lifecycle",level:3},{value:"Assistants API",id:"assistants-api",level:2},{value:"Get list assistants",id:"get-list-assistants",level:3},{value:"Get assistant",id:"get-assistant",level:3},{value:"Create an assistant",id:"create-an-assistant",level:3},{value:"Assistants Filesystem",id:"assistants-filesystem",level:2}],c={toc:p},u="wrapper";function m(e){let{components:t,...a}=e;return(0,s.kt)(u,(0,n.Z)({},c,a,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("p",null,"Assistants can use models and tools."),(0,s.kt)("blockquote",null,(0,s.kt)("p",{parentName:"blockquote"},"OpenAI Equivalent: ",(0,s.kt)("a",{parentName:"p",href:"https://platform.openai.com/docs/api-reference/assistants"},"https://platform.openai.com/docs/api-reference/assistants")),(0,s.kt)("ul",{parentName:"blockquote"},(0,s.kt)("li",{parentName:"ul"},"Jan's ",(0,s.kt)("inlineCode",{parentName:"li"},"Assistants")," are even more powerful than OpenAI due to customizable code in ",(0,s.kt)("inlineCode",{parentName:"li"},"index.js")))),(0,s.kt)("h2",{id:"user-stories"},"User Stories"),(0,s.kt)("p",null,(0,s.kt)("em",{parentName:"p"},"Users can download an assistant via a web URL")),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"Wireframes here")),(0,s.kt)("p",null,(0,s.kt)("em",{parentName:"p"},"Users can import an assistant from local directory")),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"Wireframes here")),(0,s.kt)("p",null,(0,s.kt)("em",{parentName:"p"},"Users can configure assistant settings")),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"Wireframes here")),(0,s.kt)("h2",{id:"assistant-object"},"Assistant Object"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("inlineCode",{parentName:"li"},"assistant.json"),(0,s.kt)("blockquote",{parentName:"li"},(0,s.kt)("p",{parentName:"blockquote"},"OpenAI Equivalen: ",(0,s.kt)("a",{parentName:"p",href:"https://platform.openai.com/docs/api-reference/assistants/object"},"https://platform.openai.com/docs/api-reference/assistants/object"))))),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-json"},'{\n  // Jan specific properties\n  "avatar": "https://lala.png",\n  "thread_location": "ROOT/threads",  // Default to root (optional field)\n  // TODO: add moar\n\n  // OpenAI compatible properties: https://platform.openai.com/docs/api-reference/assistants\n  "id": "asst_abc123",\n  "object": "assistant",\n  "created_at": 1698984975,\n  "name": "Math Tutor",\n  "description": null,\n  "instructions": "...",\n  "tools": [\n    {\n      "type": "retrieval"\n    },\n    {\n      "type": "web_browsing"\n    }\n  ],\n  "file_ids": ["file_id"],\n  "models": ["<model_id>"],\n  "metadata": {}\n}\n')),(0,s.kt)("h3",{id:"assistant-lifecycle"},"Assistant lifecycle"),(0,s.kt)("p",null,"Assistant has 4 states (enum)"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("inlineCode",{parentName:"li"},"to_download")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("inlineCode",{parentName:"li"},"downloading")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("inlineCode",{parentName:"li"},"ready")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("inlineCode",{parentName:"li"},"running"))),(0,s.kt)("h2",{id:"assistants-api"},"Assistants API"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"What would modifying Assistant do? (doesn't mutate ",(0,s.kt)("inlineCode",{parentName:"li"},"index.js"),"?)",(0,s.kt)("ul",{parentName:"li"},(0,s.kt)("li",{parentName:"ul"},"By default, ",(0,s.kt)("inlineCode",{parentName:"li"},"index.js")," loads ",(0,s.kt)("inlineCode",{parentName:"li"},"assistant.json")," file and executes exactly like so. This supports builders with little time to write code."),(0,s.kt)("li",{parentName:"ul"},"The ",(0,s.kt)("inlineCode",{parentName:"li"},"assistant.json")," is 1 source of truth for the definitions of ",(0,s.kt)("inlineCode",{parentName:"li"},"models")," and ",(0,s.kt)("inlineCode",{parentName:"li"},"built-in tools")," that they can use it without writing more code.")))),(0,s.kt)("h3",{id:"get-list-assistants"},"Get list assistants"),(0,s.kt)("blockquote",null,(0,s.kt)("p",{parentName:"blockquote"},"OpenAI Equivalent: ",(0,s.kt)("a",{parentName:"p",href:"https://platform.openai.com/docs/api-reference/assistants/listAssistants"},"https://platform.openai.com/docs/api-reference/assistants/listAssistants")),(0,s.kt)("ul",{parentName:"blockquote"},(0,s.kt)("li",{parentName:"ul"},"Example request")),(0,s.kt)("pre",{parentName:"blockquote"},(0,s.kt)("code",{parentName:"pre",className:"language-shell"},'  curl {JAN_URL}/v1/assistants?order=desc&limit=20 \\\n    -H "Content-Type: application/json"\n')),(0,s.kt)("ul",{parentName:"blockquote"},(0,s.kt)("li",{parentName:"ul"},"Example response")),(0,s.kt)("pre",{parentName:"blockquote"},(0,s.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "object": "list",\n  "data": [\n    {\n      "id": "asst_abc123",\n      "object": "assistant",\n      "created_at": 1698982736,\n      "name": "Coding Tutor",\n      "description": null,\n      "models": ["model_zephyr_7b", "azure-openai-gpt4-turbo"],\n      "instructions": "You are a helpful assistant designed to make me better at coding!",\n      "tools": [],\n      "file_ids": [],\n      "metadata": {},\n      "state": "ready"\n    },\n  ],\n  "first_id": "asst_abc123",\n  "last_id": "asst_abc789",\n  "has_more": false\n}\n'))),(0,s.kt)("h3",{id:"get-assistant"},"Get assistant"),(0,s.kt)("blockquote",null,(0,s.kt)("p",{parentName:"blockquote"},"OpenAI Equivalent: ",(0,s.kt)("a",{parentName:"p",href:"https://platform.openai.com/docs/api-reference/assistants/getAssistant"},"https://platform.openai.com/docs/api-reference/assistants/getAssistant")),(0,s.kt)("ul",{parentName:"blockquote"},(0,s.kt)("li",{parentName:"ul"},"Example request")),(0,s.kt)("pre",{parentName:"blockquote"},(0,s.kt)("code",{parentName:"pre",className:"language-shell"},'  curl {JAN_URL}/v1/assistants/{assistant_id}   \\\n    -H "Content-Type: application/json"\n')),(0,s.kt)("ul",{parentName:"blockquote"},(0,s.kt)("li",{parentName:"ul"},"Example response")),(0,s.kt)("pre",{parentName:"blockquote"},(0,s.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "id": "asst_abc123",\n  "object": "assistant",\n  "created_at": 1699009709,\n  "name": "HR Helper",\n  "description": null,\n  "models": ["model_zephyr_7b", "azure-openai-gpt4-turbo"],\n  "instructions": "You are an HR bot, and you have access to files to answer employee questions about company policies.",\n  "tools": [\n    {\n      "type": "retrieval"\n    }\n  ],\n  "file_ids": [\n    "file-abc123"\n  ],\n  "metadata": {},\n  "state": "ready"\n}\n'))),(0,s.kt)("h3",{id:"create-an-assistant"},"Create an assistant"),(0,s.kt)("p",null,"Create an assistant with models and instructions."),(0,s.kt)("blockquote",null,(0,s.kt)("p",{parentName:"blockquote"},"OpenAI Equivalent: ",(0,s.kt)("a",{parentName:"p",href:"https://platform.openai.com/docs/api-reference/assistants/createAssistant"},"https://platform.openai.com/docs/api-reference/assistants/createAssistant")),(0,s.kt)("ul",{parentName:"blockquote"},(0,s.kt)("li",{parentName:"ul"},"Example request")),(0,s.kt)("pre",{parentName:"blockquote"},(0,s.kt)("code",{parentName:"pre",className:"language-shell"},'  curl -X POST {JAN_URL}/v1/assistants   \\\n    -H "Content-Type: application/json" \\\n    -d {\n      "instructions": "You are a personal math tutor. When asked a question, write and run Python code to answer the question.",\n      "name": "Math Tutor",\n      "tools": [{"type": "retrieval"}],\n      "model": ["model_zephyr_7b", "azure-openai-gpt4-turbo"]\n    }\n')),(0,s.kt)("ul",{parentName:"blockquote"},(0,s.kt)("li",{parentName:"ul"},"Example response")),(0,s.kt)("pre",{parentName:"blockquote"},(0,s.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "id": "asst_abc123",\n  "object": "assistant",\n  "created_at": 1698984975,\n  "name": "Math Tutor",\n  "description": null,\n  "model": ["model_zephyr_7b", "azure-openai-gpt4-turbo"]\n  "instructions": "You are a personal math tutor. When asked a question, write and run Python code to answer the question.",\n  "tools": [\n    {\n      "type": "retrieval"\n    }\n  ],\n  "file_ids": [],\n  "metadata": {},\n  "state": "ready"\n}\n')),(0,s.kt)("h3",{parentName:"blockquote",id:"modify-an-assistant"},"Modify an assistant"),(0,s.kt)("p",{parentName:"blockquote"},"OpenAI Equivalent: ",(0,s.kt)("a",{parentName:"p",href:"https://platform.openai.com/docs/api-reference/assistants/modifyAssistant"},"https://platform.openai.com/docs/api-reference/assistants/modifyAssistant")),(0,s.kt)("ul",{parentName:"blockquote"},(0,s.kt)("li",{parentName:"ul"},"Example request")),(0,s.kt)("pre",{parentName:"blockquote"},(0,s.kt)("code",{parentName:"pre",className:"language-shell"},'  curl -X POST {JAN_URL}/v1/assistants/{assistant_id}   \\\n    -H "Content-Type: application/json" \\\n    -d {\n      "instructions": "You are a personal math tutor. When asked a question, write and run Python code to answer the question.",\n      "name": "Math Tutor",\n      "tools": [{"type": "retrieval"}],\n      "model": ["model_zephyr_7b", "azure-openai-gpt4-turbo"]\n    }\n')),(0,s.kt)("ul",{parentName:"blockquote"},(0,s.kt)("li",{parentName:"ul"},"Example response")),(0,s.kt)("pre",{parentName:"blockquote"},(0,s.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "id": "asst_abc123",\n  "object": "assistant",\n  "created_at": 1698984975,\n  "name": "Math Tutor",\n  "description": null,\n  "model": ["model_zephyr_7b", "azure-openai-gpt4-turbo"]\n  "instructions": "You are a personal math tutor. When asked a question, write and run Python code to answer the question.",\n  "tools": [\n    {\n      "type": "retrieval"\n    }\n  ],\n  "file_ids": [],\n  "metadata": {},\n  "state": "ready"\n}\n')),(0,s.kt)("h3",{parentName:"blockquote",id:"delete-assistant"},"Delete Assistant"),(0,s.kt)("p",{parentName:"blockquote"},"OpenAI Equivalent: ",(0,s.kt)("a",{parentName:"p",href:"https://platform.openai.com/docs/api-reference/assistants/deleteAssistant"},"https://platform.openai.com/docs/api-reference/assistants/deleteAssistant"),"\n`- Example request"),(0,s.kt)("pre",{parentName:"blockquote"},(0,s.kt)("code",{parentName:"pre",className:"language-shell"},"curl -X DELETE {JAN_URL}/v1/assistant/model-zephyr-7B\n")),(0,s.kt)("ul",{parentName:"blockquote"},(0,s.kt)("li",{parentName:"ul"},"Example response")),(0,s.kt)("pre",{parentName:"blockquote"},(0,s.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "id": "asst_abc123",\n  "object": "assistant.deleted",\n  "deleted": true,\n  "state": "to_download"\n}\n'))),(0,s.kt)("h2",{id:"assistants-filesystem"},"Assistants Filesystem"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-sh"},"/assistants\n    /jan\n        assistant.json    # Assistant configs (see below)\n\n        # For any custom code\n        package.json      # Import npm modules\n                          # e.g. Langchain, Llamaindex\n        /src              # Supporting files (needs better name)\n            index.js      # Entrypoint\n            process.js    # For electron IPC processes (needs better name)\n\n        # `/threads` at root level\n        # `/models` at root level\n    /shakespeare\n        assistant.json\n        package.json\n        /src\n            index.js\n            process.js\n\n        /threads          # Assistants remember conversations in the future\n        /models           # Users can upload custom models\n            /finetuned-model\n")))}m.isMDXComponent=!0}}]);