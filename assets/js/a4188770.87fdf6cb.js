"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[3316],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>f});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),d=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=d(e.components);return a.createElement(s.Provider,{value:t},e.children)},m="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},c=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,l=e.originalType,s=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),m=d(n),c=r,f=m["".concat(s,".").concat(c)]||m[c]||u[c]||l;return n?a.createElement(f,o(o({ref:t},p),{},{components:n})):a.createElement(f,o({ref:t},p))}));function f(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=n.length,o=new Array(l);o[0]=c;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i[m]="string"==typeof e?e:r,o[1]=i;for(var d=2;d<l;d++)o[d]=n[d];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}c.displayName="MDXCreateElement"},267:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>u,frontMatter:()=>l,metadata:()=>i,toc:()=>d});var a=n(87462),r=(n(67294),n(3905));const l={title:"Models"},o=void 0,i={unversionedId:"specs/models",id:"specs/models",title:"Models",description:"This is currently under development.",source:"@site/docs/specs/models.md",sourceDirName:"specs",slug:"/specs/models",permalink:"/specs/models",draft:!1,editUrl:"https://github.com/janhq/jan/tree/main/docs/docs/specs/models.md",tags:[],version:"current",lastUpdatedBy:"hiento09",lastUpdatedAt:1700726165,formattedLastUpdatedAt:"Nov 23, 2023",frontMatter:{title:"Models"},sidebar:"docsSidebar",previous:{title:"Chats",permalink:"/specs/chats"},next:{title:"Threads",permalink:"/specs/threads"}},s={},d=[{value:"Overview",id:"overview",level:2},{value:"Folder Structure",id:"folder-structure",level:2},{value:"<code>model.json</code>",id:"modeljson",level:2},{value:"Example",id:"example",level:3},{value:"API Reference",id:"api-reference",level:2},{value:"Importing Models",id:"importing-models",level:2}],p={toc:d},m="wrapper";function u(e){let{components:t,...n}=e;return(0,r.kt)(m,(0,a.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("admonition",{type:"caution"},(0,r.kt)("p",{parentName:"admonition"},"This is currently under development.")),(0,r.kt)("h2",{id:"overview"},"Overview"),(0,r.kt)("p",null,"In Jan, models are primary entities with the following capabilities:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Users can import, configure, and run models locally."),(0,r.kt)("li",{parentName:"ul"},"An ",(0,r.kt)("a",{parentName:"li",href:"https://platform.openai.com/docs/api-reference/models"},"OpenAI Model API")," compatible endpoint at ",(0,r.kt)("inlineCode",{parentName:"li"},"localhost:3000/v1/models"),"."),(0,r.kt)("li",{parentName:"ul"},"Supported model formats: ",(0,r.kt)("inlineCode",{parentName:"li"},"ggufv3"),", and more.")),(0,r.kt)("h2",{id:"folder-structure"},"Folder Structure"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Models are stored in the ",(0,r.kt)("inlineCode",{parentName:"li"},"/models")," folder."),(0,r.kt)("li",{parentName:"ul"},"Models are organized by individual folders, each containing the binaries and configurations needed to run the model. This makes for easy packaging and sharing."),(0,r.kt)("li",{parentName:"ul"},"Model folder names are unique and used as ",(0,r.kt)("inlineCode",{parentName:"li"},"model_id")," default values.")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"jan/                               # Jan root folder\n  models/\n    llama2-70b-q4_k_m/             # Example: standard GGUF model\n        model.json\n        model-binary-1.gguf\n    mistral-7b-gguf-q3_k_l/        # Example: quantizations are separate folders\n        model.json\n        mistral-7b-q3-K-L.gguf\n    mistral-7b-gguf-q8_k_m/        # Example: quantizations are separate folders\n        model.json\n        mistral-7b-q8_k_k.gguf\n    llava-ggml-Q5/                 # Example: model with many partitions\n        model.json\n        mmprj.bin\n        model_q5.ggml\n")),(0,r.kt)("h2",{id:"modeljson"},(0,r.kt)("inlineCode",{parentName:"h2"},"model.json")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Each ",(0,r.kt)("inlineCode",{parentName:"li"},"model")," folder contains a ",(0,r.kt)("inlineCode",{parentName:"li"},"model.json")," file, which is a representation of a model."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"model.json")," contains metadata and default parameters used to run a model."),(0,r.kt)("li",{parentName:"ul"},"The only required field is ",(0,r.kt)("inlineCode",{parentName:"li"},"source_url"),".")),(0,r.kt)("h3",{id:"example"},"Example"),(0,r.kt)("p",null,"Here's a standard example ",(0,r.kt)("inlineCode",{parentName:"p"},"model.json")," for a GGUF model."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"source_url"),": ",(0,r.kt)("a",{parentName:"li",href:"https://huggingface.co/TheBloke/zephyr-7B-beta-GGUF/"},"https://huggingface.co/TheBloke/zephyr-7B-beta-GGUF/"),".")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'"id": "zephyr-7b"                   // Defaults to foldername\n"object": "model",                    // Defaults to "model"\n"source_url": "https://huggingface.co/TheBloke/zephyr-7B-beta-GGUF/blob/main/zephyr-7b-beta.Q4_K_M.gguf",\n"name": "Zephyr 7B"                 // Defaults to foldername\n"owned_by": "you"                   // Defaults to you\n"version": "1",                     // Defaults to 1\n"created": 1231231                  // Defaults to file creation time\n"description": ""\n"state": enum[null, "downloading", "ready", "starting", "stopping", ...]\n"format": "ggufv3",                 // Defaults to "ggufv3"\n"settings": {                       // Models are initialized with these settings\n    "ctx_len": "2048",\n    "ngl": "100",\n    "embedding": "true",\n    "n_parallel": "4",\n    // KIV: "pre_prompt": "A chat between a curious user and an artificial intelligence",\n    // KIV:"user_prompt": "USER: ",\n    // KIV: "ai_prompt": "ASSISTANT: "\n}\n"parameters": {                     // Models are called with these parameters\n    "temperature": "0.7",\n    "token_limit": "2048",\n    "top_k": "0",\n    "top_p": "1",\n    "stream": "true"\n},\n"metadata": {}                    // Defaults to {}\n"assets": [                       // Filepaths to model binaries; Defaults to current dir\n    "file://.../zephyr-7b-q4_k_m.bin",\n]\n')),(0,r.kt)("h2",{id:"api-reference"},"API Reference"),(0,r.kt)("p",null,"Jan's Model API is compatible with ",(0,r.kt)("a",{parentName:"p",href:"https://platform.openai.com/docs/api-reference/models"},"OpenAI's Models API"),", with additional methods for managing and running models locally."),(0,r.kt)("p",null,"See ",(0,r.kt)("a",{parentName:"p",href:"https://jan.ai/api-reference#tag/Models"},"Jan Models API")),(0,r.kt)("h2",{id:"importing-models"},"Importing Models"),(0,r.kt)("admonition",{type:"caution"},(0,r.kt)("p",{parentName:"admonition"},"This is currently under development.")),(0,r.kt)("p",null,"You can import a model by dragging the model binary or gguf file into the ",(0,r.kt)("inlineCode",{parentName:"p"},"/models")," folder."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Jan automatically generates a corresponding ",(0,r.kt)("inlineCode",{parentName:"li"},"model.json")," file based on the binary filename."),(0,r.kt)("li",{parentName:"ul"},"Jan automatically organizes it into its own ",(0,r.kt)("inlineCode",{parentName:"li"},"/models/model-id")," folder."),(0,r.kt)("li",{parentName:"ul"},"Jan automatically populates the ",(0,r.kt)("inlineCode",{parentName:"li"},"model.json")," properties, which you can subsequently modify.")))}u.isMDXComponent=!0}}]);