"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[9966],{94013:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>l,contentTitle:()=>a,default:()=>h,frontMatter:()=>i,metadata:()=>c,toc:()=>d});var t=n(85893),r=n(11151);const i={title:"Architecture",slug:"/specs",description:"Jan is a ChatGPT-alternative that runs on your own computer, with a local API server.",keywords:["Jan AI","Jan","ChatGPT alternative","local AI","private AI","conversational AI","no-subscription fee","large language model"]},a=void 0,c={id:"specs/architecture",title:"Architecture",description:"Jan is a ChatGPT-alternative that runs on your own computer, with a local API server.",source:"@site/docs/specs/architecture.md",sourceDirName:"specs",slug:"/specs",permalink:"/specs",draft:!1,unlisted:!1,editUrl:"https://github.com/janhq/jan/tree/main/docs/docs/specs/architecture.md",tags:[],version:"current",lastUpdatedBy:"0xSage",lastUpdatedAt:1702615672,formattedLastUpdatedAt:"Dec 15, 2023",frontMatter:{title:"Architecture",slug:"/specs",description:"Jan is a ChatGPT-alternative that runs on your own computer, with a local API server.",keywords:["Jan AI","Jan","ChatGPT alternative","local AI","private AI","conversational AI","no-subscription fee","large language model"]},sidebar:"specsSidebar",next:{title:"File-based Approach",permalink:"/specs/file-based"}},l={},d=[{value:"Overview",id:"overview",level:2},{value:"Extensions",id:"extensions",level:2},{value:"Modules",id:"modules",level:2}];function o(e){const s={a:"a",admonition:"admonition",code:"code",h2:"h2",li:"li",p:"p",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,r.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(s.admonition,{type:"warning",children:(0,t.jsx)(s.p,{children:"This page is still under construction, and should be read as a scratchpad"})}),"\n",(0,t.jsx)(s.h2,{id:"overview",children:"Overview"}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsx)(s.li,{children:"Jan has a modular architecture and is largely built on top of its own modules."}),"\n",(0,t.jsxs)(s.li,{children:["Jan uses a local ",(0,t.jsx)(s.a,{href:"/specs/file-based",children:"file-based approach"})," for data persistence."]}),"\n",(0,t.jsxs)(s.li,{children:["Jan currently supports an Electron-based ",(0,t.jsx)(s.a,{href:"https://github.com/janhq/jan",children:"Desktop UI"})," and a C++ inference engine called ",(0,t.jsx)(s.a,{href:"https://nitro.jan.ai/docs/",children:"Nitro"}),"."]}),"\n"]}),"\n",(0,t.jsx)(s.h2,{id:"extensions",children:"Extensions"}),"\n",(0,t.jsx)(s.p,{children:"Jan has an Extensions API inspired by VSCode. In fact, most of Jan's core services are built as extensions."}),"\n",(0,t.jsx)(s.p,{children:"Jan supports the following OpenAI compatible extensions:"}),"\n",(0,t.jsxs)(s.table,{children:[(0,t.jsx)(s.thead,{children:(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.th,{children:"Jan Module"}),(0,t.jsx)(s.th,{children:"Description"}),(0,t.jsx)(s.th,{children:"API Docs"})]})}),(0,t.jsxs)(s.tbody,{children:[(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"Chat"}),(0,t.jsx)(s.td,{children:"Inference"}),(0,t.jsx)(s.td,{children:(0,t.jsx)(s.a,{href:"/api-reference/#tag/Chat-Completion",children:"/chats"})})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"Models"}),(0,t.jsx)(s.td,{children:"Models"}),(0,t.jsx)(s.td,{children:(0,t.jsx)(s.a,{href:"/api-reference/#tag/Models",children:"/models"})})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"Assistants"}),(0,t.jsx)(s.td,{children:"Apps"}),(0,t.jsx)(s.td,{children:(0,t.jsx)(s.a,{href:"/api-reference/#tag/Assistants",children:"/assistants"})})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"Threads"}),(0,t.jsx)(s.td,{children:"Conversations"}),(0,t.jsx)(s.td,{children:(0,t.jsx)(s.a,{href:"/api-reference/#tag/Threads",children:"/threads"})})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"Messages"}),(0,t.jsx)(s.td,{children:"Messages"}),(0,t.jsx)(s.td,{children:(0,t.jsx)(s.a,{href:"/api-reference/#tag/Messages",children:"/messages"})})]})]})]}),"\n",(0,t.jsx)(s.h2,{id:"modules",children:"Modules"}),"\n",(0,t.jsx)(s.p,{children:"Modules are low level, system services. It is similar to OS kernel modules. Modules provide abstractions to basic, device level functionality like working with the filesystem, device system, databases, AI inference engines, etc."}),"\n",(0,t.jsxs)(s.p,{children:["Jan follows the ",(0,t.jsx)(s.a,{href:"https://en.wikipedia.org/wiki/Dependency_inversion_principle",children:"dependency inversion principle"})," such that ",(0,t.jsx)(s.code,{children:"modules"})," expose the interfaces that ",(0,t.jsx)(s.code,{children:"extensions"})," can then implement."]})]})}function h(e={}){const{wrapper:s}={...(0,r.a)(),...e.components};return s?(0,t.jsx)(s,{...e,children:(0,t.jsx)(o,{...e})}):o(e)}},11151:(e,s,n)=>{n.d(s,{Z:()=>c,a:()=>a});var t=n(67294);const r={},i=t.createContext(r);function a(e){const s=t.useContext(i);return t.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function c(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),t.createElement(i.Provider,{value:s},e.children)}}}]);