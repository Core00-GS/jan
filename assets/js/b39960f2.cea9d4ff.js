"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[7391],{33251:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>c,contentTitle:()=>r,default:()=>u,frontMatter:()=>o,metadata:()=>i,toc:()=>d});var n=s(85893),a=s(11151);const o={title:"Data Structures"},r=void 0,i={id:"specs/data-structures",title:"Data Structures",description:"This page is still under construction, and should be read as a scratchpad",source:"@site/docs/specs/data-structures.md",sourceDirName:"specs",slug:"/specs/data-structures",permalink:"/specs/data-structures",draft:!1,unlisted:!1,editUrl:"https://github.com/janhq/jan/tree/main/docs/docs/specs/data-structures.md",tags:[],version:"current",lastUpdatedBy:"Hieu",lastUpdatedAt:1700804926,formattedLastUpdatedAt:"Nov 24, 2023",frontMatter:{title:"Data Structures"},sidebar:"docsSidebar",previous:{title:"Architecture",permalink:"/specs/architecture"},next:{title:"User Interface",permalink:"/specs/user-interface"}},c={},d=[];function l(e){const t={admonition:"admonition",code:"code",p:"p",pre:"pre",...(0,a.a)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.admonition,{type:"warning",children:(0,n.jsx)(t.p,{children:"This page is still under construction, and should be read as a scratchpad"})}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-sh",children:"janroot/\n\tassistants/\n\t\tassistant-a/\n\t\t\tassistant.json\n\t\t\tsrc/\n\t\t\t\tindex.ts\n\t\t\tthreads/\n\t\t\t\tthread-a/\n\t\t\t\tthread-b\n\tmodels/\n\t\tmodel-a/\n\t\t\tmodel.json\n"})}),"\n",(0,n.jsx)(t.p,{children:"Jan use the local filesystem for data persistence, similar to VSCode. This allows for composability and tinkerability."}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-sh=",children:"/janroot               # Jan's root folder (e.g. ~/jan)\n    /models            # For raw AI models\n    /threads           # For conversation history\n    /assistants        # For AI assistants' configs, knowledge, etc.\n"})}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-sh=",children:"/models\n    /modelA\n        model.json        # Default model settings\n        llama-7b-q4.gguf  # Model binaries\n        llama-7b-q5.gguf  # Include different quantizations\n/threads\n    /jan-unixstamp-salt\n        model.json        # Overrides assistant/model-level model settings\n        thread.json       # thread metadata (e.g. subject)\n        messages.json     # messages\n        content.json      # What is this?\n        files/            # Future for RAG\n/assistants\n    /jan\n        assistant.json    # Assistant configs (see below)\n\n        # For any custom code\n        package.json      # Import npm modules\n                          # e.g. Langchain, Llamaindex\n        /src              # Supporting files (needs better name)\n            index.js      # Entrypoint\n            process.js    # For electron IPC processes (needs better name)\n\n        # `/threads` at root level\n        # `/models` at root level\n    /shakespeare\n        assistant.json\n        model.json        # Creator chooses model and settings\n        package.json\n        /src\n            index.js\n            process.js\n\n        /threads          # Assistants remember conversations in the future\n        /models           # Users can upload custom models\n            /finetuned-model\n"})})]})}function u(e={}){const{wrapper:t}={...(0,a.a)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(l,{...e})}):l(e)}},11151:(e,t,s)=>{s.d(t,{Z:()=>i,a:()=>r});var n=s(67294);const a={},o=n.createContext(a);function r(e){const t=n.useContext(o);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:r(e.components),n.createElement(o.Provider,{value:t},e.children)}}}]);