"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[7356],{53319:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>a,default:()=>h,frontMatter:()=>r,metadata:()=>i,toc:()=>l});var s=t(85893),o=t(11151);const r={title:"Quickstart",description:"Jan is a ChatGPT-alternative that runs on your own computer, with a local API server.",keywords:["Jan AI","Jan","ChatGPT alternative","local AI","private AI","conversational AI","no-subscription fee","large language model"]},a=void 0,i={id:"guides/quickstart",title:"Quickstart",description:"Jan is a ChatGPT-alternative that runs on your own computer, with a local API server.",source:"@site/docs/guides/quickstart.md",sourceDirName:"guides",slug:"/guides/quickstart",permalink:"/guides/quickstart",draft:!1,unlisted:!1,editUrl:"https://github.com/janhq/jan/tree/main/docs/docs/guides/quickstart.md",tags:[],version:"current",lastUpdatedBy:"Hoang Ha",lastUpdatedAt:1702615325,formattedLastUpdatedAt:"Dec 15, 2023",frontMatter:{title:"Quickstart",description:"Jan is a ChatGPT-alternative that runs on your own computer, with a local API server.",keywords:["Jan AI","Jan","ChatGPT alternative","local AI","private AI","conversational AI","no-subscription fee","large language model"]},sidebar:"guidesSidebar",previous:{title:"Introduction",permalink:"/guides"},next:{title:"How Jan Works",permalink:"/guides/how-jan-works"}},d={},l=[{value:"1. Create a model folder",id:"1-create-a-model-folder",level:2},{value:"2. Create a model JSON",id:"2-create-a-model-json",level:2}];function c(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",img:"img",p:"p",pre:"pre",...(0,o.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.p,{children:"Jan is compatible with all GGUF models."}),"\n",(0,s.jsxs)(n.p,{children:["In this guide we will use our latest model, ",(0,s.jsx)(n.a,{href:"https://huggingface.co/janhq/trinity-v1-GGUF",children:"Trinity"}),", as an example."]}),"\n",(0,s.jsx)(n.h2,{id:"1-create-a-model-folder",children:"1. Create a model folder"}),"\n",(0,s.jsxs)(n.p,{children:["Navigate to ",(0,s.jsx)(n.code,{children:"~/jan/models"})," folder on your computer."]}),"\n",(0,s.jsxs)(n.p,{children:["In ",(0,s.jsx)(n.code,{children:"App Settings"}),", go to ",(0,s.jsx)(n.code,{children:"Advanced"}),", then ",(0,s.jsx)(n.code,{children:"Open App Directory"}),"."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sh",children:"# Windows\nC:/Users/<your_user_name>/jan/models\n\n# MacOS/Linux\njan/models\n"})}),"\n",(0,s.jsxs)(n.p,{children:["In the ",(0,s.jsx)(n.code,{children:"models"})," folder, create a folder with the name of the model."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sh",children:"mkdir pandora-v1-q4\n"})}),"\n",(0,s.jsx)(n.h2,{id:"2-create-a-model-json",children:"2. Create a model JSON"}),"\n",(0,s.jsxs)(n.p,{children:["Jan follows a standardized model template, called a ",(0,s.jsx)(n.code,{children:"model.json"}),". This allows for easy model configurations, exporting, and sharing."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sh",children:"cd pandora-v1-q4\ntouch model.json\n"})}),"\n",(0,s.jsxs)(n.p,{children:["The following is an example template for ",(0,s.jsx)(n.code,{children:"model.json"})]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:'{\n    "source_url": "https://huggingface.co/janhq/trinity-v1-GGUF/resolve/main/trinity-v1.Q4_K_M.gguf",\n    "id": "trinity-v1-7b",\n    "object": "model",\n    "name": "Trinity 7B Q4",\n    "version": "1.0",\n    "description": "Trinity is an experimental model merge of GreenNodeLM & LeoScorpius using the Slerp method. Recommended for daily assistance purposes.",\n    "format": "gguf",\n    "settings": {\n      "ctx_len": 2048,\n      "prompt_template": "<|im_start|>system\\n{system_message}<|im_end|>\\n<|im_start|>user\\n{prompt}<|im_end|>\\n<|im_start|>assistant"\n    },\n    "parameters": {\n      "max_tokens": 2048\n    },\n    "metadata": {\n      "author": "Jan",\n      "tags": ["7B", "Merged", "Featured"],\n      "size": 4370000000\n    },\n    "engine": "nitro"\n  }  \n'})}),"\n",(0,s.jsxs)(n.admonition,{type:"caution",children:[(0,s.jsxs)(n.p,{children:["Ensure the ",(0,s.jsx)(n.code,{children:"source_url"})," is the link to download model"]}),(0,s.jsxs)(n.p,{children:["Ensure the ",(0,s.jsx)(n.code,{children:"id"})," is the same with the new created folder"]}),(0,s.jsxs)(n.p,{children:["Ensure to choose right ",(0,s.jsx)(n.code,{children:"prompt_template"})]})]}),"\n",(0,s.jsx)(n.h1,{id:"3-use-your-model",children:"3. Use your model"}),"\n",(0,s.jsx)(n.p,{children:"Restart the Jan application and look for your model in the Hub."}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{src:"https://hackmd.io/_uploads/HJLAqvwI6.png",alt:"image"})}),"\n",(0,s.jsxs)(n.p,{children:["There you go. If you have any questions or want to request for more preconfigured GGUF models, please message us on ",(0,s.jsx)(n.a,{href:"https://discord.gg/Dt7MxDyNNZ",children:"Jan Discord"}),"."]})]})}function h(e={}){const{wrapper:n}={...(0,o.a)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},11151:(e,n,t)=>{t.d(n,{Z:()=>i,a:()=>a});var s=t(67294);const o={},r=s.createContext(o);function a(e){const n=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:a(e.components),s.createElement(r.Provider,{value:n},e.children)}}}]);