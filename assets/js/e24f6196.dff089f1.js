"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[9966],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>g});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var o=a.createContext({}),p=function(e){var t=a.useContext(o),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=p(e.components);return a.createElement(o.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,l=e.originalType,o=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),u=p(n),m=r,g=u["".concat(o,".").concat(m)]||u[m]||d[m]||l;return n?a.createElement(g,i(i({ref:t},c),{},{components:n})):a.createElement(g,i({ref:t},c))}));function g(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=n.length,i=new Array(l);i[0]=m;var s={};for(var o in t)hasOwnProperty.call(t,o)&&(s[o]=t[o]);s.originalType=e,s[u]="string"==typeof e?e:r,i[1]=s;for(var p=2;p<l;p++)i[p]=n[p];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},3315:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>o,contentTitle:()=>i,default:()=>d,frontMatter:()=>l,metadata:()=>s,toc:()=>p});var a=n(7462),r=(n(7294),n(3905));const l={title:"Architecture"},i=void 0,s={unversionedId:"specs/architecture",id:"specs/architecture",title:"Architecture",description:"This page is still under construction, and should be read as a scratchpad",source:"@site/docs/specs/architecture.md",sourceDirName:"specs",slug:"/specs/architecture",permalink:"/specs/architecture",draft:!1,editUrl:"https://github.com/janhq/jan/tree/main/docs/docs/specs/architecture.md",tags:[],version:"current",lastUpdatedBy:"Faisal Amir",lastUpdatedAt:1700534782,formattedLastUpdatedAt:"Nov 21, 2023",frontMatter:{title:"Architecture"},sidebar:"docsSidebar",previous:{title:"Build a Module",permalink:"/docs/modules"},next:{title:"Data Structures",permalink:"/specs/data-structures"}},o={},p=[{value:"Concepts",id:"concepts",level:2}],c={toc:p},u="wrapper";function d(e){let{components:t,...n}=e;return(0,r.kt)(u,(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("admonition",{type:"warning"},(0,r.kt)("p",{parentName:"admonition"},"This page is still under construction, and should be read as a scratchpad")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Jan is built using modules"),(0,r.kt)("li",{parentName:"ul"},"Plugin architecture (on Pluggable-Electron)")),(0,r.kt)("p",null,"Jan is comprised of system-level modules that mirror OpenAI\u2019s, exposing similar APIs and objects"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Modules are modular, atomic implementations of a single OpenAI-compatible endpoint"),(0,r.kt)("li",{parentName:"ul"},"Modules can be swapped out for alternate implementations",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"The default ",(0,r.kt)("inlineCode",{parentName:"li"},"messages")," module persists messages in thread-specific ",(0,r.kt)("inlineCode",{parentName:"li"},".json")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"messages-postgresql")," uses Postgres for production-grade cloud-native environments")))),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Jan Module"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:null},"API Docs"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Chat"),(0,r.kt)("td",{parentName:"tr",align:null},"Inference"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/api/chat"},"/chat"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Models"),(0,r.kt)("td",{parentName:"tr",align:null},"Models"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/api/model"},"/model"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Assistants"),(0,r.kt)("td",{parentName:"tr",align:null},"Apps"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/api/assistant"},"/assistant"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Threads"),(0,r.kt)("td",{parentName:"tr",align:null},"Conversations"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/api/thread"},"/thread"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Messages"),(0,r.kt)("td",{parentName:"tr",align:null},"Messages"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/api/message"},"/message"))))),(0,r.kt)("h2",{id:"concepts"},"Concepts"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-mermaid"},'graph LR\n    A1[("A User Integrators")] --\x3e|uses| B1[assistant]\n    B1 --\x3e|persist conversational history| C1[("thread A")]\n    B1 --\x3e|executes| D1[("built-in tools as module")]\n    B1 -.->|uses| E1[model]\n    E1 -.->|model.json| D1\n    D1 --\x3e F1[retrieval]\n    F1 --\x3e|belongs to| G1[("web browsing")]\n    G1 --\x3e H1[Google]\n    G1 --\x3e H2[Duckduckgo]\n    F1 --\x3e|belongs to| I1[("API calling")]\n    F1 --\x3e J1[("knowledge files")]\n')),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"User/ Integrator"),(0,r.kt)("li",{parentName:"ul"},"Assistant object"),(0,r.kt)("li",{parentName:"ul"},"Model object"),(0,r.kt)("li",{parentName:"ul"},"Thread object"),(0,r.kt)("li",{parentName:"ul"},"Built-in tool object")))}d.isMDXComponent=!0}}]);