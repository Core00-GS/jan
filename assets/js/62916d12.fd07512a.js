"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[3298],{94566:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>h,frontMatter:()=>r,metadata:()=>a,toc:()=>c});var i=s(85893),t=s(11151);const r={title:"Overview",slug:"/docs"},o=void 0,a={id:"docs/README",title:"Overview",description:"The following low-level docs are aimed at core contributors and cover how to contribute to the Core SDK.",source:"@site/docs/docs/README.md",sourceDirName:"docs",slug:"/docs",permalink:"/docs",draft:!1,unlisted:!1,editUrl:"https://github.com/janhq/jan/tree/main/docs/docs/docs/README.md",tags:[],version:"current",lastUpdatedBy:"Hieu",lastUpdatedAt:1704505979,formattedLastUpdatedAt:"Jan 6, 2024",frontMatter:{title:"Overview",slug:"/docs"},sidebar:"docsSidebar",next:{title:"Engineering Specs",permalink:"/docs/engineering"}},l={},c=[{value:"Core SDK",id:"core-sdk",level:2},{value:"Cross Platform",id:"cross-platform",level:3},{value:"Local First",id:"local-first",level:3},{value:"AI Native",id:"ai-native",level:3},{value:"Fun Project Ideas",id:"fun-project-ideas",level:2}];function d(e){const n={a:"a",admonition:"admonition",code:"code",h2:"h2",h3:"h3",li:"li",p:"p",strong:"strong",ul:"ul",...(0,t.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.p,{children:"The following low-level docs are aimed at core contributors and cover how to contribute to the Core SDK."}),"\n",(0,i.jsx)(n.admonition,{type:"tip",children:(0,i.jsxs)(n.p,{children:["If you are interested to ",(0,i.jsx)(n.strong,{children:"build on top of the SDK"}),", like creating assistants or adding app level extensions, please refer to ",(0,i.jsx)(n.a,{href:"/developer",children:"developer docs"})," instead."]})}),"\n",(0,i.jsx)(n.h2,{id:"core-sdk",children:"Core SDK"}),"\n",(0,i.jsx)(n.p,{children:"At its Core, Jan is a cross-platform, local-first and AI native framework that can be used to build anything. In fact, current features are all implemented as 3rd party extensions on top of this Core SDK."}),"\n",(0,i.jsx)(n.p,{children:"Ultimately, we aim for a VSCode or Obsidian like framework that allows devs to build and customize complex AI applications for their specific needs, in less than 15 minutes."}),"\n",(0,i.jsx)(n.h3,{id:"cross-platform",children:"Cross Platform"}),"\n",(0,i.jsxs)(n.p,{children:["Jan follows ",(0,i.jsx)(n.a,{href:"https://blog.cleancoder.com/uncle-bob/2012/08/13/the-clean-architecture.html",children:"Clean Architecture"})," to the best of our ability. Though leaky abstractions remain (we're a fast moving, open source codebase), we do our best to build an SDK that allows devs to ",(0,i.jsx)(n.strong,{children:"build once, deploy everywhere."})]}),"\n",(0,i.jsx)(n.p,{children:"Currently, Jan supports:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"Node Native Runtime"}),", good for server side apps"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"Electron Chromium"}),", good for Desktop Native apps"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"Capacitor"}),", good for Mobile apps (planned, not built yet)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"Python Runtime"}),", good for MLOps workflows (planned, not built yet)"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Currently, Jan works across:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Mac Intel & Silicon"}),"\n",(0,i.jsx)(n.li,{children:"Windows"}),"\n",(0,i.jsx)(n.li,{children:"Ubuntu"}),"\n",(0,i.jsx)(n.li,{children:"Nvidia GPUs"}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Read more:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://github.com/janhq/jan/tree/main/core",children:"Code Entrypoint"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://en.wikipedia.org/wiki/Dependency_inversion_principle",children:"Dependency Inversion"})}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"local-first",children:"Local First"}),"\n",(0,i.jsx)(n.p,{children:"Jan's data persistence happens on the user's local filesystem."}),"\n",(0,i.jsxs)(n.p,{children:["We implemented abstractions on top of ",(0,i.jsx)(n.code,{children:"fs"})," and other core modules in an opinionated way, s.t. user data is saved in a folder-based framework that lets users easily package, export, and manage their data."]}),"\n",(0,i.jsx)(n.p,{children:"Read more:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://github.com/janhq/jan/blob/main/core/src/fs.ts",children:"Folder-based fs wrapper"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://github.com/janhq/jan/tree/main/core/src/node",children:"Piping Node modules across infrastructures"})}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"ai-native",children:"AI Native"}),"\n",(0,i.jsx)(n.p,{children:"All software applications can be natively supercharged with an embedded AI server and AI abstractions."}),"\n",(0,i.jsx)(n.p,{children:"Including:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["OpenAI Compatible AI ",(0,i.jsx)(n.a,{href:"https://github.com/janhq/jan/tree/main/core/src/types",children:"types"})," and ",(0,i.jsx)(n.a,{href:"https://github.com/janhq/jan/tree/main/core/src/extensions",children:"core extensions"})," to support common functionality like making an inference call."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["A lightweight, embedded C++ ",(0,i.jsx)(n.a,{href:"https://github.com/janhq/jan/tree/main/extensions/inference-nitro-extension",children:"inference engine"})," that's immediately callable from code."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"https://github.com/janhq/jan/tree/main/core/src/api",children:"Code Entrypoint"})}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"fun-project-ideas",children:"Fun Project Ideas"}),"\n",(0,i.jsx)(n.p,{children:"Beyond the current Jan client and UX, the Core SDK can be used to build many other AI-powered and privacy preserving applications."}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"Game engine"}),": For AI enabled character games, procedural generation games"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"Health app"}),": For a personal healthcare app that improves habits"]}),"\n",(0,i.jsx)(n.li,{children:"Got ideas? Make a PR into this docs page!"}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["If you are interested to tackle these issues, or have suggestions for integrations and other OSS tools we can use, please hit us up in ",(0,i.jsx)(n.a,{href:"https://discord.gg/5rQ2zTv3be",children:"Discord"}),"."]})]})}function h(e={}){const{wrapper:n}={...(0,t.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},11151:(e,n,s)=>{s.d(n,{Z:()=>a,a:()=>o});var i=s(67294);const t={},r=i.createContext(t);function o(e){const n=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:o(e.components),i.createElement(r.Provider,{value:n},e.children)}}}]);