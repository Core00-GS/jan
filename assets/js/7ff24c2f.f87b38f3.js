"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[6404],{3905:(e,t,s)=>{s.d(t,{Zo:()=>p,kt:()=>f});var n=s(7294);function a(e,t,s){return t in e?Object.defineProperty(e,t,{value:s,enumerable:!0,configurable:!0,writable:!0}):e[t]=s,e}function o(e,t){var s=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),s.push.apply(s,n)}return s}function r(e){for(var t=1;t<arguments.length;t++){var s=null!=arguments[t]?arguments[t]:{};t%2?o(Object(s),!0).forEach((function(t){a(e,t,s[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(s)):o(Object(s)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(s,t))}))}return e}function i(e,t){if(null==e)return{};var s,n,a=function(e,t){if(null==e)return{};var s,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)s=o[n],t.indexOf(s)>=0||(a[s]=e[s]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)s=o[n],t.indexOf(s)>=0||Object.prototype.propertyIsEnumerable.call(e,s)&&(a[s]=e[s])}return a}var l=n.createContext({}),c=function(e){var t=n.useContext(l),s=t;return e&&(s="function"==typeof e?e(t):r(r({},t),e)),s},p=function(e){var t=c(e.components);return n.createElement(l.Provider,{value:t},e.children)},d="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var s=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),d=c(s),u=a,f=d["".concat(l,".").concat(u)]||d[u]||m[u]||o;return s?n.createElement(f,r(r({ref:t},p),{},{components:s})):n.createElement(f,r({ref:t},p))}));function f(e,t){var s=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=s.length,r=new Array(o);r[0]=u;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i[d]="string"==typeof e?e:a,r[1]=i;for(var c=2;c<o;c++)r[c]=s[c];return n.createElement.apply(null,r)}return n.createElement.apply(null,s)}u.displayName="MDXCreateElement"},7005:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>l,contentTitle:()=>r,default:()=>m,frontMatter:()=>o,metadata:()=>i,toc:()=>c});var n=s(7462),a=(s(7294),s(3905));const o={title:"Assistants"},r=void 0,i={unversionedId:"docs/modules/assistants",id:"docs/modules/assistants",title:"Assistants",description:"Assistants can use models and tools.",source:"@site/docs/docs/modules/03_assistants.md",sourceDirName:"docs/modules",slug:"/docs/modules/assistants",permalink:"/docs/modules/assistants",draft:!1,editUrl:"https://github.com/janhq/jan/tree/main/docs/docs/docs/modules/03_assistants.md",tags:[],version:"current",lastUpdatedBy:"Daniel",lastUpdatedAt:1699848756,formattedLastUpdatedAt:"Nov 13, 2023",sidebarPosition:3,frontMatter:{title:"Assistants"},sidebar:"docsSidebar",previous:{title:"Models",permalink:"/docs/modules/models"},next:{title:"Threads",permalink:"/docs/modules/threads"}},l={},c=[{value:"Assistant Object",id:"assistant-object",level:2},{value:"Assistants API",id:"assistants-api",level:2},{value:"Assistants Filesystem",id:"assistants-filesystem",level:2}],p={toc:c},d="wrapper";function m(e){let{components:t,...s}=e;return(0,a.kt)(d,(0,n.Z)({},p,s,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"Assistants can use models and tools."),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Jan's ",(0,a.kt)("inlineCode",{parentName:"li"},"Assistants")," are even more powerful than OpenAI due to customizable code in ",(0,a.kt)("inlineCode",{parentName:"li"},"index.js"))),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"OpenAI Equivalent: ",(0,a.kt)("a",{parentName:"p",href:"https://platform.openai.com/docs/api-reference/assistants"},"https://platform.openai.com/docs/api-reference/assistants"))),(0,a.kt)("h2",{id:"assistant-object"},"Assistant Object"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"assistant.json")),(0,a.kt)("li",{parentName:"ul"},"Equivalent to: ",(0,a.kt)("a",{parentName:"li",href:"https://platform.openai.com/docs/api-reference/assistants/object"},"https://platform.openai.com/docs/api-reference/assistants/object"))),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-json="},'{\n  // Jan specific properties\n  "avatar": "https://lala.png"\n  "thread_location": "ROOT/threads"  // Default to root (optional field)\n  // TODO: add moar\n\n  // OpenAI compatible properties: https://platform.openai.com/docs/api-reference/assistants\n  "id": "asst_abc123",\n  "object": "assistant",\n  "created_at": 1698984975,\n  "name": "Math Tutor",\n  "description": null,\n  "model": reference model.json,\n  "instructions": reference model.json,\n  "tools": [\n    {\n      "type": "rag"\n    }\n  ],\n  "file_ids": [],\n  "metadata": {}\n}\n')),(0,a.kt)("h2",{id:"assistants-api"},"Assistants API"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("em",{parentName:"li"},"TODO"),": What would modifying Assistant do? (doesn't mutate ",(0,a.kt)("inlineCode",{parentName:"li"},"index.js"),"?)")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sh="},"GET https://api.openai.com/v1/assistants                       # List\nPOST https://api.openai.com/v1/assistants                      # C\nGET https://api.openai.com/v1/assistants/{assistant_id}        # R\nPOST https://api.openai.com/v1/assistants/{assistant_id}       # U\nDELETE https://api.openai.com/v1/assistants/{assistant_id}     # D\n")),(0,a.kt)("h2",{id:"assistants-filesystem"},"Assistants Filesystem"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sh="},"/assistants\n    /jan\n        assistant.json    # Assistant configs (see below)\n\n        # For any custom code\n        package.json      # Import npm modules\n                          # e.g. Langchain, Llamaindex\n        /src              # Supporting files (needs better name)\n            index.js      # Entrypoint\n            process.js    # For electron IPC processes (needs better name)\n\n        # `/threads` at root level\n        # `/models` at root level\n    /shakespeare\n        assistant.json\n        model.json        # Creator chooses model and settings\n        package.json\n        /src\n            index.js\n            process.js\n\n        /threads          # Assistants remember conversations in the future\n        /models           # Users can upload custom models\n            /finetuned-model\n")))}m.isMDXComponent=!0}}]);