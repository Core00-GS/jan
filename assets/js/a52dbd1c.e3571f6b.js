"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[8740],{44702:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>c,contentTitle:()=>r,default:()=>p,frontMatter:()=>o,metadata:()=>i,toc:()=>d});var n=s(85893),a=s(11151);const o={title:"Chats"},r=void 0,i={id:"specs/chats",title:"Chats",description:"This page is still under construction, and should be read as a scratchpad",source:"@site/docs/specs/chats.md",sourceDirName:"specs",slug:"/specs/chats",permalink:"/specs/chats",draft:!1,unlisted:!1,editUrl:"https://github.com/janhq/jan/tree/main/docs/docs/specs/chats.md",tags:[],version:"current",lastUpdatedBy:"Hieu",lastUpdatedAt:1700804883,formattedLastUpdatedAt:"Nov 24, 2023",frontMatter:{title:"Chats"},sidebar:"docsSidebar",previous:{title:"User Interface",permalink:"/specs/user-interface"},next:{title:"Models",permalink:"/specs/models"}},c={},d=[];function l(e){const t={a:"a",admonition:"admonition",blockquote:"blockquote",li:"li",p:"p",ul:"ul",...(0,a.a)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.admonition,{type:"warning",children:(0,n.jsx)(t.p,{children:"This page is still under construction, and should be read as a scratchpad"})}),"\n",(0,n.jsx)(t.p,{children:"Chats are essentially inference requests to a model"}),"\n",(0,n.jsxs)(t.blockquote,{children:["\n",(0,n.jsxs)(t.p,{children:["OpenAI Equivalent: ",(0,n.jsx)(t.a,{href:"https://platform.openai.com/docs/api-reference/chat",children:"https://platform.openai.com/docs/api-reference/chat"})]}),"\n"]}),"\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsx)(t.li,{children:"This should reference Nitro ChatCompletion API page to reduce duplication."}),"\n",(0,n.jsx)(t.li,{children:"We are fine with adding Jan API for this but it makes sense to use Nitro as reference as Nitro is default inference engine for Jan in this release"}),"\n"]})]})}function p(e={}){const{wrapper:t}={...(0,a.a)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(l,{...e})}):l(e)}},11151:(e,t,s)=>{s.d(t,{Z:()=>i,a:()=>r});var n=s(67294);const a={},o=n.createContext(a);function r(e){const t=n.useContext(o);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:r(e.components),n.createElement(o.Provider,{value:t},e.children)}}}]);