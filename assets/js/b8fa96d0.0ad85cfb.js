"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[844],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>f});var a=n(67294);function s(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){s(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,s=function(e,t){if(null==e)return{};var n,a,s={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(s[n]=e[n]);return s}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(s[n]=e[n])}return s}var l=a.createContext({}),p=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=p(e.components);return a.createElement(l.Provider,{value:t},e.children)},d="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,s=e.mdxType,r=e.originalType,l=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),d=p(n),u=s,f=d["".concat(l,".").concat(u)]||d[u]||m[u]||r;return n?a.createElement(f,o(o({ref:t},c),{},{components:n})):a.createElement(f,o({ref:t},c))}));function f(e,t){var n=arguments,s=t&&t.mdxType;if("string"==typeof e||s){var r=n.length,o=new Array(r);o[0]=u;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i[d]="string"==typeof e?e:s,o[1]=i;for(var p=2;p<r;p++)o[p]=n[p];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},78154:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>m,frontMatter:()=>r,metadata:()=>i,toc:()=>p});var a=n(87462),s=(n(67294),n(3905));const r={title:"Messages"},o=void 0,i={unversionedId:"specs/messages",id:"specs/messages",title:"Messages",description:"This is currently under development.",source:"@site/docs/specs/messages.md",sourceDirName:"specs",slug:"/specs/messages",permalink:"/specs/messages",draft:!1,editUrl:"https://github.com/janhq/jan/tree/main/docs/docs/specs/messages.md",tags:[],version:"current",lastUpdatedBy:"hiento09",lastUpdatedAt:1700726165,formattedLastUpdatedAt:"Nov 23, 2023",frontMatter:{title:"Messages"},sidebar:"docsSidebar",previous:{title:"Threads",permalink:"/specs/threads"}},l={},p=[{value:"Overview",id:"overview",level:2},{value:"Folder Structure",id:"folder-structure",level:2},{value:"<code>message.jsonl</code>",id:"messagejsonl",level:2},{value:"Examples",id:"examples",level:3},{value:"API Reference",id:"api-reference",level:2}],c={toc:p},d="wrapper";function m(e){let{components:t,...n}=e;return(0,s.kt)(d,(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("admonition",{type:"caution"},(0,s.kt)("p",{parentName:"admonition"},"This is currently under development.")),(0,s.kt)("h2",{id:"overview"},"Overview"),(0,s.kt)("p",null,(0,s.kt)("inlineCode",{parentName:"p"},"Messages")," capture a conversation's content. This can include the content from LLM responses and other metadata from ",(0,s.kt)("a",{parentName:"p",href:"/specs/chats"},"chat completions"),"."),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"Users and assistants can send multimedia messages."),(0,s.kt)("li",{parentName:"ul"},"An ",(0,s.kt)("a",{parentName:"li",href:"https://platform.openai.com/docs/api-reference/messages"},"OpenAI Message API")," compatible endpoint at ",(0,s.kt)("inlineCode",{parentName:"li"},"localhost:3000/v1/messages"),".")),(0,s.kt)("h2",{id:"folder-structure"},"Folder Structure"),(0,s.kt)("p",null,"Messages are saved in the ",(0,s.kt)("inlineCode",{parentName:"p"},"/threads/{thread_id}")," folder in ",(0,s.kt)("inlineCode",{parentName:"p"},"messages.jsonl")," files"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-sh"},"jan/\n    threads/\n        assistant_name_unix_timestamp/\n            ...\n            messages.jsonl\n        jan_2341243134/\n            ...\n            messages.jsonl\n")),(0,s.kt)("h2",{id:"messagejsonl"},(0,s.kt)("inlineCode",{parentName:"h2"},"message.jsonl")),(0,s.kt)("p",null,"Individual messages are saved in ",(0,s.kt)("inlineCode",{parentName:"p"},"jsonl")," format for indexing purposes."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-json"},"{...message_2}\n{...message_1}\n{...message_0}\n")),(0,s.kt)("h3",{id:"examples"},"Examples"),(0,s.kt)("p",null,"Here's a standard example ",(0,s.kt)("inlineCode",{parentName:"p"},"message")," sent from a user."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-json"},'"id": "0",                            // Sequential or UUID\n"object": "thread.message",           // Defaults to "thread.message"\n"created_at": 1698983503,\n"thread_id": "thread_asdf",           // Defaults to parent thread\n"assistant_id": "jan",                // Defaults to parent thread\n"role": "user",                  // From either "user" or "assistant"\n"content": [\n  {\n    "type": "text",\n    "text": {\n      "value": "Hi!?",\n      "annotations": []\n    }\n  }\n],\n"metadata": {},                       // Defaults to {}\n// "run_id": "...",                   // Rather than `run` id abstraction\n// "file_ids": [],\n')),(0,s.kt)("p",null,"Here's an example ",(0,s.kt)("inlineCode",{parentName:"p"},"message")," response from an assistant."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-json"},'"id": "0",                            // Sequential or UUID\n"object": "thread.message",           // Defaults to "thread.message"\n"created_at": 1698983503,\n"thread_id": "thread_asdf",           // Defaults to parent thread\n"assistant_id": "jan",                // Defaults to parent thread\n"role": "assistant",                  // From either "user" or "assistant"\n"content": [                          // Usually from Chat Completion obj\n  {\n    "type": "text",\n    "text": {\n      "value": "Hi! How can I help you today?",\n      "annotations": []\n    }\n  }\n],\n"metadata": {},                       // Defaults to {}\n// "run_id": "...",                   // KIV\n// "file_ids": [],                    // KIV\n// "usage": {}                        // KIV: saving chat completion properties https://platform.openai.com/docs/api-reference/chat/object\n')),(0,s.kt)("h2",{id:"api-reference"},"API Reference"),(0,s.kt)("p",null,"Jan's ",(0,s.kt)("inlineCode",{parentName:"p"},"messages")," API is compatible with ",(0,s.kt)("a",{parentName:"p",href:"https://platform.openai.com/docs/api-reference/messages"},"OpenAI's Messages API"),", with additional methods for managing messages locally."),(0,s.kt)("p",null,"See ",(0,s.kt)("a",{parentName:"p",href:"https://jan.ai/api-reference#tag/Messages"},"Jan Messages API")))}m.isMDXComponent=!0}}]);