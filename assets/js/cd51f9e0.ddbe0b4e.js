"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[6842],{3905:(e,n,t)=>{t.d(n,{Zo:()=>s,kt:()=>f});var r=t(7294);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,i=function(e,n){if(null==e)return{};var t,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var p=r.createContext({}),c=function(e){var n=r.useContext(p),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},s=function(e){var n=c(e.components);return r.createElement(p.Provider,{value:n},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},m=r.forwardRef((function(e,n){var t=e.components,i=e.mdxType,o=e.originalType,p=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),u=c(t),m=i,f=u["".concat(p,".").concat(m)]||u[m]||d[m]||o;return t?r.createElement(f,a(a({ref:n},s),{},{components:t})):r.createElement(f,a({ref:n},s))}));function f(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var o=t.length,a=new Array(o);a[0]=m;var l={};for(var p in n)hasOwnProperty.call(n,p)&&(l[p]=n[p]);l.originalType=e,l[u]="string"==typeof e?e:i,a[1]=l;for(var c=2;c<o;c++)a[c]=t[c];return r.createElement.apply(null,a)}return r.createElement.apply(null,t)}m.displayName="MDXCreateElement"},2499:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>p,contentTitle:()=>a,default:()=>d,frontMatter:()=>o,metadata:()=>l,toc:()=>c});var r=t(7462),i=(t(7294),t(3905));const o={title:"init"},a=void 0,l={unversionedId:"reference/init",id:"reference/init",title:"init",description:"init is the entrypoint for your application and its custom logic. init is a reserved function that Jan will look for to initialize your application.",source:"@site/docs/reference/01_init.md",sourceDirName:"reference",slug:"/reference/init",permalink:"/reference/init",draft:!1,editUrl:"https://github.com/janhq/jan/tree/main/docs/docs/reference/01_init.md",tags:[],version:"current",lastUpdatedBy:"Daniel",lastUpdatedAt:1699109684,formattedLastUpdatedAt:"Nov 4, 2023",sidebarPosition:1,frontMatter:{title:"init"},sidebar:"devSidebar",previous:{title:"RAG Plugin",permalink:"/developers/plugins/rag"},next:{title:"CoreService",permalink:"/reference/coreservice"}},p={},c=[{value:"Usage",id:"usage",level:2},{value:"RegisterExtensionPoint",id:"registerextensionpoint",level:2},{value:"invokePluginFunc",id:"invokepluginfunc",level:2}],s={toc:c},u="wrapper";function d(e){let{components:n,...t}=e;return(0,i.kt)(u,(0,r.Z)({},s,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"init")," is the entrypoint for your application and its custom logic. ",(0,i.kt)("inlineCode",{parentName:"p"},"init")," is a reserved function that Jan will look for to initialize your application."),(0,i.kt)("h2",{id:"usage"},"Usage"),(0,i.kt)("p",null,"Importing"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},'// javascript\nconst core = require("@janhq/core");\n\n// typescript\nimport * as core from "@janhq/core";\n')),(0,i.kt)("p",null,"Setting up event listeners"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"export function init({ register }) {\n  myListener();\n}\n")),(0,i.kt)("p",null,"Setting up core service implementation"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},'export function init({ register }: { register: RegisterExtensionPoint }) {\n  register(DataService.GetConversations, "my-app-id", myImplementation);\n}\n')),(0,i.kt)("h2",{id:"registerextensionpoint"},"RegisterExtensionPoint"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"RegisterExtensionPoint")," is used for app initialization."),(0,i.kt)("p",null,"It lets you register ",(0,i.kt)("inlineCode",{parentName:"p"},"CoreService")," functions/methods with the main application."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},'import { RegisterExtensionPoint } from "@janhq/core";\n')),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"type RegisterExtensionPoint = (\n  extensionName: string,\n  extensionId: string,\n  method: Function,\n  priority?: number\n)\n")),(0,i.kt)("h2",{id:"invokepluginfunc"},"invokePluginFunc"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"invokePluginFunc")," is a way to invoke your custom functions (defined in your ",(0,i.kt)("inlineCode",{parentName:"p"},"module.ts"),") from your application client (defined in your ",(0,i.kt)("inlineCode",{parentName:"p"},"index.ts"),")"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},'// index.ts: your application "frontend" and entrypoint\nfunction foo(id: number) {\n  return core.invokePluginFunc(MODULE_PATH, "foo", param1, ...);\n}\n\nexport function init({ register }: { register: RegisterExtensionPoint }) {\n  register(Service.Foo, "my-app-id", foo);\n}\n')),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},'// module.ts: your application "backend"\nexport function foo(param1, ...) {\n  // Your code here\n}\n')))}d.isMDXComponent=!0}}]);