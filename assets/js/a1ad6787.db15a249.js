"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[9220],{3905:(e,t,o)=>{o.d(t,{Zo:()=>d,kt:()=>f});var n=o(7294);function l(e,t,o){return t in e?Object.defineProperty(e,t,{value:o,enumerable:!0,configurable:!0,writable:!0}):e[t]=o,e}function a(e,t){var o=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),o.push.apply(o,n)}return o}function r(e){for(var t=1;t<arguments.length;t++){var o=null!=arguments[t]?arguments[t]:{};t%2?a(Object(o),!0).forEach((function(t){l(e,t,o[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(o)):a(Object(o)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(o,t))}))}return e}function s(e,t){if(null==e)return{};var o,n,l=function(e,t){if(null==e)return{};var o,n,l={},a=Object.keys(e);for(n=0;n<a.length;n++)o=a[n],t.indexOf(o)>=0||(l[o]=e[o]);return l}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)o=a[n],t.indexOf(o)>=0||Object.prototype.propertyIsEnumerable.call(e,o)&&(l[o]=e[o])}return l}var m=n.createContext({}),p=function(e){var t=n.useContext(m),o=t;return e&&(o="function"==typeof e?e(t):r(r({},t),e)),o},d=function(e){var t=p(e.components);return n.createElement(m.Provider,{value:t},e.children)},i="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var o=e.components,l=e.mdxType,a=e.originalType,m=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),i=p(o),u=l,f=i["".concat(m,".").concat(u)]||i[u]||c[u]||a;return o?n.createElement(f,r(r({ref:t},d),{},{components:o})):n.createElement(f,r({ref:t},d))}));function f(e,t){var o=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var a=o.length,r=new Array(a);r[0]=u;var s={};for(var m in t)hasOwnProperty.call(t,m)&&(s[m]=t[m]);s.originalType=e,s[i]="string"==typeof e?e:l,r[1]=s;for(var p=2;p<a;p++)r[p]=o[p];return n.createElement.apply(null,r)}return n.createElement.apply(null,o)}u.displayName="MDXCreateElement"},3076:(e,t,o)=>{o.r(t),o.d(t,{assets:()=>m,contentTitle:()=>r,default:()=>c,frontMatter:()=>a,metadata:()=>s,toc:()=>p});var n=o(7462),l=(o(7294),o(3905));const a={title:"Models"},r=void 0,s={unversionedId:"docs/specs/models",id:"docs/specs/models",title:"Models",description:"Draft Specification: functionality has not been implemented yet.",source:"@site/docs/docs/specs/models.md",sourceDirName:"docs/specs",slug:"/docs/specs/models",permalink:"/docs/specs/models",draft:!1,editUrl:"https://github.com/janhq/jan/tree/main/docs/docs/docs/specs/models.md",tags:[],version:"current",lastUpdatedBy:"Daniel",lastUpdatedAt:1700215624,formattedLastUpdatedAt:"Nov 17, 2023",frontMatter:{title:"Models"},sidebar:"docsSidebar",previous:{title:"Chats",permalink:"/docs/specs/chats"},next:{title:"Threads",permalink:"/docs/specs/threads"}},m={},p=[{value:"Model Object",id:"model-object",level:2},{value:"Model API",id:"model-api",level:2},{value:"Model Filesystem",id:"model-filesystem",level:2}],d={toc:p},i="wrapper";function c(e){let{components:t,...o}=e;return(0,l.kt)(i,(0,n.Z)({},d,o,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("admonition",{type:"warning"},(0,l.kt)("p",{parentName:"admonition"},"Draft Specification: functionality has not been implemented yet. "),(0,l.kt)("p",{parentName:"admonition"},"Feedback: ",(0,l.kt)("a",{parentName:"p",href:"https://hackmd.io/ulO3uB1AQCqLa5SAAMFOQw"},"HackMD: Models Spec")," ")),(0,l.kt)("p",null,"Models are AI models like Llama and Mistral"),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"OpenAI Equivalent: ",(0,l.kt)("a",{parentName:"p",href:"https://platform.openai.com/docs/api-reference/models"},"https://platform.openai.com/docs/api-reference/models"))),(0,l.kt)("h2",{id:"model-object"},"Model Object"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"model.json"))),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"Equivalent to: ",(0,l.kt)("a",{parentName:"p",href:"https://platform.openai.com/docs/api-reference/models/object"},"https://platform.openai.com/docs/api-reference/models/object"))),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n    // OpenAI model compatibility\n    // https://platform.openai.com/docs/api-reference/models)\n    "id": "llama-2-uuid",\n    "object": "model",\n    "created": 1686935002,\n    "owned_by": "you"\n\n    // Model settings (benchmark: Ollama)\n    // https://github.com/jmorganca/ollama/blob/main/docs/modelfile.md#template\n    "model_name": "llama2",\n    "model_path": "ROOT/models/...",\n    "parameters": {\n        "temperature": "..",\n        "token-limit": "..",\n        "top-k": "..",\n        "top-p": ".."\n    },\n    "template": "This is a full prompt template",\n    "system": "This is a system prompt",\n\n    // Model metadata (benchmark: HuggingFace)\n    "version": "...",\n    "author": "...",\n    "tags": "...",\n    ...\n}\n')),(0,l.kt)("h2",{id:"model-api"},"Model API"),(0,l.kt)("p",null,"See ",(0,l.kt)("a",{parentName:"p",href:"/api/model"},"/model")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Equivalent to: ",(0,l.kt)("a",{parentName:"li",href:"https://platform.openai.com/docs/api-reference/models"},"https://platform.openai.com/docs/api-reference/models"))),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sh"},"GET https://localhost:1337/v1/models             # List models\nGET https://localhost:1337/v1/models/{model}     # Get model object\nDELETE https://localhost:1337/v1/models/{model}  # Delete model\n\nTODO:\n# Start model\n# Stop model\n")),(0,l.kt)("h2",{id:"model-filesystem"},"Model Filesystem"),(0,l.kt)("p",null,"How ",(0,l.kt)("inlineCode",{parentName:"p"},"models")," map onto your local filesystem"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sh"},"/janroot\n    /models\n        /modelA\n            model.json         # Default model params\n            modelA.gguf\n            modelA.bin\n        /modelB/*\n            model.json\n            modelB.gguf\n    /assistants\n        model.json             # Defines model, default: looks in `/models`\n        /models                # Optional /models folder that overrides root\n            /modelA\n                model.json\n                modelA.bin\n")))}c.isMDXComponent=!0}}]);