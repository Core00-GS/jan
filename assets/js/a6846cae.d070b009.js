"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[5585],{81775:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>o,contentTitle:()=>d,default:()=>h,frontMatter:()=>r,metadata:()=>l,toc:()=>c});var i=s(85893),t=s(11151);const r={title:"Docker",slug:"/install/docker",description:"Jan is a ChatGPT-alternative that runs on your own computer, with a local API server.",keywords:["Jan AI","Jan","ChatGPT alternative","local AI","private AI","conversational AI","no-subscription fee","large language model","docker installation","cpu mode","gpu mode"]},d="Installing Jan using Docker",l={id:"guides/installation/docker",title:"Docker",description:"Jan is a ChatGPT-alternative that runs on your own computer, with a local API server.",source:"@site/docs/guides/02-installation/05-docker.md",sourceDirName:"guides/02-installation",slug:"/install/docker",permalink:"/install/docker",draft:!1,unlisted:!1,editUrl:"https://github.com/janhq/jan/tree/main/docs/docs/guides/02-installation/05-docker.md",tags:[],version:"current",lastUpdatedBy:"Henry",lastUpdatedAt:1709094168,formattedLastUpdatedAt:"Feb 28, 2024",sidebarPosition:5,frontMatter:{title:"Docker",slug:"/install/docker",description:"Jan is a ChatGPT-alternative that runs on your own computer, with a local API server.",keywords:["Jan AI","Jan","ChatGPT alternative","local AI","private AI","conversational AI","no-subscription fee","large language model","docker installation","cpu mode","gpu mode"]},sidebar:"guidesSidebar",previous:{title:"From Source",permalink:"/install/from-source"},next:{title:"Hardware Requirements",permalink:"/guides/install/hardware"}},o={},c=[{value:"Pre-requisites",id:"pre-requisites",level:3},{value:"Run Jan in Docker Mode",id:"run-jan-in-docker-mode",level:3}];function a(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h3:"h3",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,t.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h1,{id:"installing-jan-using-docker",children:"Installing Jan using Docker"}),"\n",(0,i.jsx)(n.h3,{id:"pre-requisites",children:"Pre-requisites"}),"\n",(0,i.jsx)(n.admonition,{type:"note",children:(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Supported OS"}),": Linux, WSL2 Docker"]})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Docker Engine and Docker Compose are required to run Jan in Docker mode. Follow the ",(0,i.jsx)(n.a,{href:"https://docs.docker.com/engine/install/ubuntu/",children:"instructions"})," below to get started with Docker Engine on Ubuntu."]}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"curl -fsSL https://get.docker.com -o get-docker.sh\nsudo sh ./get-docker.sh --dry-run\n"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["If you intend to run Jan in GPU mode, you need to install ",(0,i.jsx)(n.code,{children:"nvidia-driver"})," and ",(0,i.jsx)(n.code,{children:"nvidia-docker2"}),". Follow the instruction ",(0,i.jsx)(n.a,{href:"https://docs.nvidia.com/datacenter/cloud-native/container-toolkit/latest/install-guide.html",children:"here"})," for installation."]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"run-jan-in-docker-mode",children:"Run Jan in Docker Mode"}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Docker compose Profile"}),(0,i.jsx)(n.th,{children:"Description"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"cpu-fs"})}),(0,i.jsx)(n.td,{children:"Run Jan in CPU mode with default file system"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"cpu-s3fs"})}),(0,i.jsx)(n.td,{children:"Run Jan in CPU mode with S3 file system"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"gpu-fs"})}),(0,i.jsx)(n.td,{children:"Run Jan in GPU mode with default file system"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"gpu-s3fs"})}),(0,i.jsx)(n.td,{children:"Run Jan in GPU mode with S3 file system"})]})]})]}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Environment Variable"}),(0,i.jsx)(n.th,{children:"Description"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"S3_BUCKET_NAME"})}),(0,i.jsx)(n.td,{children:"S3 bucket name - leave blank for default file system"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"AWS_ACCESS_KEY_ID"})}),(0,i.jsx)(n.td,{children:"AWS access key ID - leave blank for default file system"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"AWS_SECRET_ACCESS_KEY"})}),(0,i.jsx)(n.td,{children:"AWS secret access key - leave blank for default file system"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"AWS_ENDPOINT"})}),(0,i.jsx)(n.td,{children:"AWS endpoint URL - leave blank for default file system"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"AWS_REGION"})}),(0,i.jsx)(n.td,{children:"AWS region - leave blank for default file system"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"API_BASE_URL"})}),(0,i.jsxs)(n.td,{children:["Jan Server URL, please modify it as your public ip address or domain name default ",(0,i.jsx)(n.a,{href:"http://localhost:1377",children:"http://localhost:1377"})]})]})]})]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Option 1"}),": Run Jan in CPU mode"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"# cpu mode with default file system\ndocker compose --profile cpu-fs up -d\n\n# cpu mode with S3 file system\ndocker compose --profile cpu-s3fs up -d\n"})}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Option 2"}),": Run Jan in GPU mode"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Step 1"}),": Check CUDA compatibility with your NVIDIA driver by running ",(0,i.jsx)(n.code,{children:"nvidia-smi"})," and check the CUDA version in the output"]}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"nvidia-smi\n\n# Output\n+---------------------------------------------------------------------------------------+\n| NVIDIA-SMI 531.18                 Driver Version: 531.18       CUDA Version: 12.1     |\n|-----------------------------------------+----------------------+----------------------+\n| GPU  Name                      TCC/WDDM | Bus-Id        Disp.A | Volatile Uncorr. ECC |\n| Fan  Temp  Perf            Pwr:Usage/Cap|         Memory-Usage | GPU-Util  Compute M. |\n|                                         |                      |               MIG M. |\n|=========================================+======================+======================|\n|   0  NVIDIA GeForce RTX 4070 Ti    WDDM | 00000000:01:00.0  On |                  N/A |\n|  0%   44C    P8               16W / 285W|   1481MiB / 12282MiB |      2%      Default |\n|                                         |                      |                  N/A |\n+-----------------------------------------+----------------------+----------------------+\n|   1  NVIDIA GeForce GTX 1660 Ti    WDDM | 00000000:02:00.0 Off |                  N/A |\n|  0%   49C    P8               14W / 120W|      0MiB /  6144MiB |      0%      Default |\n|                                         |                      |                  N/A |\n+-----------------------------------------+----------------------+----------------------+\n|   2  NVIDIA GeForce GTX 1660 Ti    WDDM | 00000000:05:00.0 Off |                  N/A |\n| 29%   38C    P8               11W / 120W|      0MiB /  6144MiB |      0%      Default |\n|                                         |                      |                  N/A |\n+-----------------------------------------+----------------------+----------------------+\n\n+---------------------------------------------------------------------------------------+\n| Processes:                                                                            |\n|  GPU   GI   CI        PID   Type   Process name                            GPU Memory |\n|        ID   ID                                                             Usage      |\n|=======================================================================================|\n"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Step 2"}),": Visit ",(0,i.jsx)(n.a,{href:"https://catalog.ngc.nvidia.com/orgs/nvidia/containers/cuda/tags",children:"NVIDIA NGC Catalog "})," and find the smallest minor version of image tag that matches your CUDA version (e.g., 12.1 -> 12.1.0)"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Step 3"}),": Update the ",(0,i.jsx)(n.code,{children:"Dockerfile.gpu"})," line number 5 with the latest minor version of the image tag from step 2 (e.g. change ",(0,i.jsx)(n.code,{children:"FROM nvidia/cuda:12.2.0-runtime-ubuntu22.04 AS base"})," to ",(0,i.jsx)(n.code,{children:"FROM nvidia/cuda:12.1.0-runtime-ubuntu22.04 AS base"}),")"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Step 4"}),": Run command to start Jan in GPU mode"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"# GPU mode with default file system\ndocker compose --profile gpu-fs up -d\n\n# GPU mode with S3 file system\ndocker compose --profile gpu-s3fs up -d\n"})}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["This will start the web server and you can access Jan at ",(0,i.jsx)(n.code,{children:"http://localhost:3000"}),"."]}),"\n",(0,i.jsx)(n.admonition,{type:"warning",children:(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"RAG feature is not supported in Docker mode with s3fs yet."}),"\n"]})})]})}function h(e={}){const{wrapper:n}={...(0,t.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(a,{...e})}):a(e)}},11151:(e,n,s)=>{s.d(n,{Z:()=>l,a:()=>d});var i=s(67294);const t={},r=i.createContext(t);function d(e){const n=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:d(e.components),i.createElement(r.Provider,{value:n},e.children)}}}]);