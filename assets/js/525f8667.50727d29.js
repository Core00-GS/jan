"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[7164],{3905:(e,n,t)=>{t.d(n,{Zo:()=>p,kt:()=>v});var a=t(7294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function s(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?s(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):s(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},s=Object.keys(e);for(a=0;a<s.length;a++)t=s[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(a=0;a<s.length;a++)t=s[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var l=a.createContext({}),c=function(e){var n=a.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},p=function(e){var n=c(e.components);return a.createElement(l.Provider,{value:n},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},d=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,s=e.originalType,l=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),u=c(t),d=r,v=u["".concat(l,".").concat(d)]||u[d]||m[d]||s;return t?a.createElement(v,o(o({ref:n},p),{},{components:t})):a.createElement(v,o({ref:n},p))}));function v(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var s=t.length,o=new Array(s);o[0]=d;var i={};for(var l in n)hasOwnProperty.call(n,l)&&(i[l]=n[l]);i.originalType=e,i[u]="string"==typeof e?e:r,o[1]=i;for(var c=2;c<s;c++)o[c]=t[c];return a.createElement.apply(null,o)}return a.createElement.apply(null,t)}d.displayName="MDXCreateElement"},4949:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>m,frontMatter:()=>s,metadata:()=>i,toc:()=>c});var a=t(7462),r=(t(7294),t(3905));const s={title:"events"},o=void 0,i={unversionedId:"reference/events",id:"reference/events",title:"events",description:"events lets you receive events about actions that take place in the app, like when a user sends a new message.",source:"@site/docs/reference/03_events.md",sourceDirName:"reference",slug:"/reference/events",permalink:"/reference/events",draft:!1,editUrl:"https://github.com/janhq/jan/tree/main/docs/docs/reference/03_events.md",tags:[],version:"current",lastUpdatedBy:"Daniel",lastUpdatedAt:1699333432,formattedLastUpdatedAt:"Nov 7, 2023",sidebarPosition:3,frontMatter:{title:"events"},sidebar:"devSidebar",previous:{title:"CoreService",permalink:"/reference/coreservice"},next:{title:"store",permalink:"/reference/store"}},l={},c=[{value:"Usage",id:"usage",level:2},{value:"EventName",id:"eventname",level:2},{value:"event.on",id:"eventon",level:2},{value:"event.emit",id:"eventemit",level:2},{value:"event.off",id:"eventoff",level:2}],p={toc:c},u="wrapper";function m(e){let{components:n,...t}=e;return(0,r.kt)(u,(0,a.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"events")," lets you receive events about actions that take place in the app, like when a user sends a new message."),(0,r.kt)("p",null,"You can then implement custom logic handlers for such events."),(0,r.kt)("h2",{id:"usage"},"Usage"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'import { events } from "@janhq/core";\n')),(0,r.kt)("p",null,"You can subscribe to NewMessageRequest events by defining a function to handle the event and registering it with the events object:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'import { events } from "@janhq/core";\n\nfunction handleMessageRequest(message: NewMessageRequest) {\n  // Your logic here. For example:\n  // const response = openai.createChatCompletion({...})\n}\nfunction registerListener() {\n  events.on(EventName.OnNewMessageRequest, handleMessageRequest);\n}\n// Register the listener function with the relevant extension points.\nexport function init({ register }) {\n  registerListener();\n}\n')),(0,r.kt)("p",null,"In this example, we're defining a function called handleMessageRequest that takes a NewMessageRequest object as its argument. We're also defining a function called registerListener that registers the handleMessageRequest function as a listener for NewMessageRequest events using the on method of the events object."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'import { events } from "@janhq/core";\n\nfunction handleMessageRequest(data: NewMessageRequest) {\n  // Your logic here. For example:\n   const response = openai.createChatCompletion({...})\n   const message: NewMessageResponse = {\n    ...data,\n    message: response.data.choices[0].message.content\n   }\n  // Now emit event so the app can display in the conversation\n   events.emit(EventName.OnNewMessageResponse, message)\n}\n')),(0,r.kt)("h2",{id:"eventname"},"EventName"),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"EventName")," enum bundles the following events:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"OnNewConversation")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"OnNewMessageRequest")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"OnNewMessageResponse")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"OnMessageResponseUpdate")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"OnDownloadUpdate")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"OnDownloadSuccess")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"OnDownloadError"))),(0,r.kt)("h2",{id:"eventon"},"event.on"),(0,r.kt)("p",null,"Adds an observer for an event."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"const on: (eventName: string, handler: Function) => void = (eventName, handler);\n")),(0,r.kt)("h2",{id:"eventemit"},"event.emit"),(0,r.kt)("p",null,"Emits an event."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"const emit: (eventName: string, object: any) => void = (eventName, object);\n")),(0,r.kt)("h2",{id:"eventoff"},"event.off"),(0,r.kt)("p",null,"Removes an observer for an event."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"const off: (eventName: string, handler: Function) => void =\n  (eventName, handler);\n")))}m.isMDXComponent=!0}}]);